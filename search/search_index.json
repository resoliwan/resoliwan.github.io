{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"README.md I am excited by constantly learning of many things (Computer Science, Math, life, algorithms) Software Engineer I make common solution for game (Library for games). I make MSA server framework for massive online game. I applied data analysis to balance game. How to work Set the goal. Abstract problems. Break down to sub problems. Do same thing until the remaining sub-problem becomes trivial to solve. Machine Learning & Math I\u2019ve been taking ML & Math courses from MOOC 5 years ago. I have 7 machine learning certification from Coursera. I study reinforcement learning. I love Linear algebra, Partial differential equation, Probability. I am I love ideas that make invisible visible. I love a shift from doing to understanding. I am a father of world best cute girl and boy. I have sense of humour. Skills Algorithms, System Design, Micro-services, TDD, Machine-Learning Typescript, Java, Cpp, Python, Javascript Spring, Node, Redis, Mongo, RDB Docker, AWS, Android, Vim More I love programming and enjoy it. I like vim. I use Pomodoro as a time management method so sometimes I respond after 25 mins later. Linkedin Profile Email: resoliwan@gmail.com","title":"README.md"},{"location":"#readmemd","text":"I am excited by constantly learning of many things (Computer Science, Math, life, algorithms)","title":"README.md"},{"location":"#software-engineer","text":"I make common solution for game (Library for games). I make MSA server framework for massive online game. I applied data analysis to balance game.","title":"Software Engineer"},{"location":"#how-to-work","text":"Set the goal. Abstract problems. Break down to sub problems. Do same thing until the remaining sub-problem becomes trivial to solve.","title":"How to work"},{"location":"#machine-learning-math","text":"I\u2019ve been taking ML & Math courses from MOOC 5 years ago. I have 7 machine learning certification from Coursera. I study reinforcement learning. I love Linear algebra, Partial differential equation, Probability.","title":"Machine Learning &amp; Math"},{"location":"#i-am","text":"I love ideas that make invisible visible. I love a shift from doing to understanding. I am a father of world best cute girl and boy. I have sense of humour.","title":"I am"},{"location":"#skills","text":"Algorithms, System Design, Micro-services, TDD, Machine-Learning Typescript, Java, Cpp, Python, Javascript Spring, Node, Redis, Mongo, RDB Docker, AWS, Android, Vim","title":"Skills"},{"location":"#more","text":"I love programming and enjoy it. I like vim. I use Pomodoro as a time management method so sometimes I respond after 25 mins later. Linkedin Profile Email: resoliwan@gmail.com","title":"More"},{"location":"algorithm/en_1_introduction/","text":"1.Introduction 1. The Role of Algorithm in Computing. What are algorithm? An algorithm is any well-defined procedure that takes values as input and produces some value as output. like function. The statement of problem specifies the desired input and output relationship. The algorithm is procedure for archieving input/output relationship. Ex. Sorting problem Input : A sequence of n elements $ A = < a_{1}, a_{2}, ... ,a_{n} > $. Output : The permutation(reordering) $ A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > $ of the input sequence such that satisfies $ a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} $. Why is the study algorithms worthwhile? To learn techniques of algorithm design and analysis. From https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"1.Introduction"},{"location":"algorithm/en_1_introduction/#1introduction","text":"","title":"1.Introduction"},{"location":"algorithm/en_1_introduction/#1-the-role-of-algorithm-in-computing","text":"What are algorithm? An algorithm is any well-defined procedure that takes values as input and produces some value as output. like function. The statement of problem specifies the desired input and output relationship. The algorithm is procedure for archieving input/output relationship. Ex. Sorting problem Input : A sequence of n elements $ A = < a_{1}, a_{2}, ... ,a_{n} > $. Output : The permutation(reordering) $ A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > $ of the input sequence such that satisfies $ a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} $. Why is the study algorithms worthwhile? To learn techniques of algorithm design and analysis.","title":"1. The Role of Algorithm in Computing."},{"location":"algorithm/en_1_introduction/#from","text":"https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"From"},{"location":"algorithm/en_2_getting_started/","text":"2.Getting Started Check list for learning algorithm Idea. Pseudocode. Argue that it is correctly works. Analyze its running time. Problem Input : A sequence of n elements $ A = < a_{1}, a_{2}, ... ,a_{n} > $. Output : The permutation(reordering) $ A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > $ of the input sequence such that satisfies $ a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} $. Insertion sort Idea Idea: incremental approach. increment sorted array. insert current item into the sorted array A[1..j - 1] HowTo: Start from sorted length 1 array. Until conditions meet - i > 0 and A[i] > key Move i to one step back. Decrease i. Insert current item in A[i + 1] Pseudocode Pursue clean and concise INSERATION-SORT(A) 1 for j = 2 to A.length 2 key = A[j] 3 // Insert A[j] into the sorted sequence A[1..j - 1] 4 i = j - 1 5 while i > 0 and A[i] > key 6 A[i + 1] = A[i] 7 i = i - 1 8 A[i + 1] = key Tip Use \"i\" as a important loop variable name. Use simple condition first when there is logical concatenation. Use left as variable and right as almost constant value when compare two numbers. Make it simple as possible Argue that it is correctly works Guess I will use loop invariants. It keeps from start to terminate. I'll claim sub-array is always sorted. loop invariants: The sub-array A[1..j-1] consists of the elements originally in A[1..j-1], but in sorted order. It is similarity to the mathematical induction. We say an algorithm has true loop invariant on some properties. When the three properties hold, the loop invariant is true. Initialization: It is true prior to the first iteration of the loop. Maintenance: If it is true before an iteration of the loop,it remains true before the next iteration. Termination: When the loop terminates, the invariant gives us a useful property that helps show that the algorithm is correct. Initialization When j = 2, The subarray A[1..j-1] consists of just one element A[1], which is in fact the original element in A[1]. Moreover, the subarray is sorted(trivially, of course). Maintenance The body of for loop works by moving A[j-1], A[j-2], A[j-3], and so on by one position to the right until it finds the proper position for A j , at which point it inserts the value of a j . The subarray A[1..j] then consists of the elements originally in A[1..j],but it sorted order. Incrementing j for the next iteration of the for loop then preserve the loop invariant. Termination The condition causing the for loop to terminate is that j > A.length = n. Because each loop iteration increase j by 1, we must have j = n + 1 at that time. Substituting n + 1 for j in the wording of loop invariant, we have that the subarray A[1..n] consists of the element originally in A[1..n], but in sorted order. Pseudocode conventions We use the keyword to when a for loop increments its loop counter. We use the keyword downto when a for loop decrements its loop counter. When the loop counter changes by an amount greater then 1, the amount of change follows the optional keyword by. We shall not use global variables without explicit indication. The notation .. is used to indicate a range of values within an arrary. Thus, A[1..j] indicates the subarray of A consisting of the j elements A[1],A[2],...,A[j]. We organize compound date into objects, which are composed of attributes. We treat a variable represent arrary and object as a point to the date representing the arrary or object. For all attributes f of an object x, setting y = x causes y.f to equal x.f. Moreover, if we now set x.f = 3, then afterward not only dose x.f equal 3, but y.f equals 3 as well. In other words, x and y point to same object after the assignment y = x. We pass parameter to a procedure by value. When object passed, the pointer to the data representing object is copied. We allow multiple values to be returned by a single return statement. The boolean operators \"and\" and \"or\" are short circuiting. Exercise 2.1-1 Using Figure 2.2 as a model, illustrate the operation of INSERTION-SORT on the Arrary A = <31, 41, 59, 26, 41. 58> 2.1-2 Rewrite the Insertion-sort procedure to sort into nonincreasing instead of nondescreasing. INSERATION-SORT(A) For j = 2 to A.length key = A[j] i = j - 1 while i > 0 and A[i] < Key A[i + 1] = A[i] i = i - 1 A[i + 1] = key 2.1-3 Consider the searching problem : - Input : A sequence of n numbers $ A = < a_{1}, a_{2},...,a_{n} > $ and a value v. - Output : An index i such that v = A[i] or the special value NIL if v dose not appear in A. Write pseudocode for linear search, which scan trough the sequence, looking for v. Using a loop invariant, prove that your algorithm is correct. Make sure that your loop invariant fulfills the three necessary properties. pseudocode LINEAR-SEARCH(A, v) i = NIL For j = 1 to A.length if A[j] == v i = j loop invariants i is NIL or 1 <= i <= A.length. If A[j] == v then i = j. Initialization : i is NIL. Before prior iteration. Maintenance : When j increase loop invariants hold before iteration and remain true before next iteration. Termination : When the loop terminate it give us a solution that is true. 2.1-4 Consider the problem of adding two n-bit binary integers, stored in two n-element arrays A and B. The sum of two integers should be stored in binary form in an (n+1)-element arrary C. State the problem formally and write pseudocode for adding two integers Input : A and B are n-bit binary integers, stored in two n-element arrary A and B. (A,B[i] = 0, 1) Output : C are n+1 bit binary integer, stored in (n+1) element arrary. ADD(A, B) carry = 0 For A.length downto 1 sum = A[i] + B[i] + carry C[i + 1] = sum % 2 carry = sum / 2 C[1] = carry code Analyzing Algorithms Predicting the resources that the algorithm required. We want to the performance measure of an algorithms to find best solution with machine-independent. Measuring Resources Computational time Memory Communication Bandwidth Model of implementation A generic one processor. random-access machine(RAM): instructions are executed one after another, with no concurrent operations. We assume our RAM is almost identical with real machine. (also computational time of instructions.) Analysis of insertion sort Running time of a program as a function of the size of its input. $$ f(\\text{size of input}) = \\text{Running time}$$ - input size: depends on the problem being studied. We shall indicate which input size measures is being used with each problem we study. - running time: the number of primitive steps or operations executed. It is convenient to define the notion of step so it is as machine-independent as possible. - We shall assume that each execution of the $i$th line takes time $c_{i}$, where $c_{i}$ is a constant. - We let $t_{j}$ denote the number of times the while loop test in line 5 is executed for that value of j. INSERATION-SORT(A) cost times 1 for j = 2 to A.length c1 n 2 key = A[j] c2 n-1 3 // ... 0 n-1 4 i = j - 1 c4 n-1 5 while i > 0 and A[i] > key c5 $\\sum_{j=2}^{n} t_{j}$ 6 A[i + 1] = A[i] c6 $\\sum_{j=2}^{n} (t_{j} - 1)$ 7 i = i - 1 c7 $\\sum_{j=2}^{n} (t_{j} - 1)$ 8 A[i + 1] = key c8 n-1 The running time of algorithm is the sum of running time for each statement executed; $$ T(N) = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}\\sum_{j=2}^{n} t_{j} + c_{6}\\sum_{j=2}^{n} (t_{j} - 1) + c_{7}\\sum_{j=2}^{n} (t_{j} - 1) + c_{8}(n-1)$$ The best occurs if the array is already sorted. $$ \\begin{align} T(N) & = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}(n-1) + c_{8}(n-1) \\\\ & = (c_{1} + c_{2} + c_{4} + c_{5} + c_{8})n - (c_{2} + c_{4} + c_{5} + c_{8}) \\\\ & = an + b \\end{align} $$ It is thus a liner function of n. The worst occur if the array is in reversed order. We must compare each element A[j] with each element in the entire sorted subarray $A[1..j-1]$ and so $t_{j}$ for $ j = 2, 3, .., n$ $$ t_{1},..t_{j} = 2,..,n $$ Summation $$ \\begin{align} 1 + 2 + ... + n & = \\sum_{k=1}^{n} k \\\\ & = \\frac{1}{2}n(n+1) \\\\ \\end{align} $$ Apply to above equations start from 2 not from 1 $$ \\sum_{j=2}^{n}t_{j} = \\sum_{j=2}^{n}j = \\frac{n(n+1)}{2} - 1$$ $$ \\sum_{j=2}^{n}(t_{j} - 1) = \\sum_{j=2}^{n}(j - 1) = \\frac{n(n-1)}{2}$$ $$ \\begin{align} T(N) & = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}\\Biggl( \\frac{n(n+1)}{2} - 1 \\Biggr) + c_{6}\\Biggl( \\frac{n(n-1)}{2} \\Biggr) + c_{7}\\Biggl( \\frac{n(n-1)}{2} \\Biggr)+ c_{8}(n-1) \\\\ & = \\biggl(\\frac{c_{5}}{2} + \\frac{c_{6}}{2} + \\frac{c_{7}}{2}\\biggr)n^{2} + \\biggl( c_{1} + c_{2} + c_{4} + \\frac{c_{5}}{2} - \\frac{c_{6}}{2} - \\frac{c_{7}}{2} + c_{8}\\biggr)n - (c_{2} + c_{4} + c_{5} + c_{8}) \\\\ & = an^{2} + bn + c \\end{align} $$ It is a quadratic function of n $an^{2} + bn + c$ Worst-case and average-case analysis From https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"2.Getting Started"},{"location":"algorithm/en_2_getting_started/#2getting-started","text":"","title":"2.Getting Started"},{"location":"algorithm/en_2_getting_started/#check-list-for-learning-algorithm","text":"Idea. Pseudocode. Argue that it is correctly works. Analyze its running time.","title":"Check list for learning algorithm"},{"location":"algorithm/en_2_getting_started/#problem","text":"Input : A sequence of n elements $ A = < a_{1}, a_{2}, ... ,a_{n} > $. Output : The permutation(reordering) $ A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > $ of the input sequence such that satisfies $ a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} $.","title":"Problem"},{"location":"algorithm/en_2_getting_started/#insertion-sort","text":"","title":"Insertion sort"},{"location":"algorithm/en_2_getting_started/#idea","text":"Idea: incremental approach. increment sorted array. insert current item into the sorted array A[1..j - 1] HowTo: Start from sorted length 1 array. Until conditions meet - i > 0 and A[i] > key Move i to one step back. Decrease i. Insert current item in A[i + 1]","title":"Idea"},{"location":"algorithm/en_2_getting_started/#pseudocode","text":"Pursue clean and concise INSERATION-SORT(A) 1 for j = 2 to A.length 2 key = A[j] 3 // Insert A[j] into the sorted sequence A[1..j - 1] 4 i = j - 1 5 while i > 0 and A[i] > key 6 A[i + 1] = A[i] 7 i = i - 1 8 A[i + 1] = key","title":"Pseudocode"},{"location":"algorithm/en_2_getting_started/#tip","text":"Use \"i\" as a important loop variable name. Use simple condition first when there is logical concatenation. Use left as variable and right as almost constant value when compare two numbers. Make it simple as possible","title":"Tip"},{"location":"algorithm/en_2_getting_started/#argue-that-it-is-correctly-works","text":"","title":"Argue that it is correctly works"},{"location":"algorithm/en_2_getting_started/#guess","text":"I will use loop invariants. It keeps from start to terminate. I'll claim sub-array is always sorted.","title":"Guess"},{"location":"algorithm/en_2_getting_started/#loop-invariants","text":"The sub-array A[1..j-1] consists of the elements originally in A[1..j-1], but in sorted order. It is similarity to the mathematical induction. We say an algorithm has true loop invariant on some properties. When the three properties hold, the loop invariant is true. Initialization: It is true prior to the first iteration of the loop. Maintenance: If it is true before an iteration of the loop,it remains true before the next iteration. Termination: When the loop terminates, the invariant gives us a useful property that helps show that the algorithm is correct.","title":"loop invariants:"},{"location":"algorithm/en_2_getting_started/#initialization","text":"When j = 2, The subarray A[1..j-1] consists of just one element A[1], which is in fact the original element in A[1]. Moreover, the subarray is sorted(trivially, of course).","title":"Initialization"},{"location":"algorithm/en_2_getting_started/#maintenance","text":"The body of for loop works by moving A[j-1], A[j-2], A[j-3], and so on by one position to the right until it finds the proper position for A j , at which point it inserts the value of a j . The subarray A[1..j] then consists of the elements originally in A[1..j],but it sorted order. Incrementing j for the next iteration of the for loop then preserve the loop invariant.","title":"Maintenance"},{"location":"algorithm/en_2_getting_started/#termination","text":"The condition causing the for loop to terminate is that j > A.length = n. Because each loop iteration increase j by 1, we must have j = n + 1 at that time. Substituting n + 1 for j in the wording of loop invariant, we have that the subarray A[1..n] consists of the element originally in A[1..n], but in sorted order.","title":"Termination"},{"location":"algorithm/en_2_getting_started/#pseudocode-conventions","text":"We use the keyword to when a for loop increments its loop counter. We use the keyword downto when a for loop decrements its loop counter. When the loop counter changes by an amount greater then 1, the amount of change follows the optional keyword by. We shall not use global variables without explicit indication. The notation .. is used to indicate a range of values within an arrary. Thus, A[1..j] indicates the subarray of A consisting of the j elements A[1],A[2],...,A[j]. We organize compound date into objects, which are composed of attributes. We treat a variable represent arrary and object as a point to the date representing the arrary or object. For all attributes f of an object x, setting y = x causes y.f to equal x.f. Moreover, if we now set x.f = 3, then afterward not only dose x.f equal 3, but y.f equals 3 as well. In other words, x and y point to same object after the assignment y = x. We pass parameter to a procedure by value. When object passed, the pointer to the data representing object is copied. We allow multiple values to be returned by a single return statement. The boolean operators \"and\" and \"or\" are short circuiting.","title":"Pseudocode conventions"},{"location":"algorithm/en_2_getting_started/#exercise","text":"","title":"Exercise"},{"location":"algorithm/en_2_getting_started/#21-1","text":"Using Figure 2.2 as a model, illustrate the operation of INSERTION-SORT on the Arrary A = <31, 41, 59, 26, 41. 58>","title":"2.1-1"},{"location":"algorithm/en_2_getting_started/#21-2","text":"Rewrite the Insertion-sort procedure to sort into nonincreasing instead of nondescreasing. INSERATION-SORT(A) For j = 2 to A.length key = A[j] i = j - 1 while i > 0 and A[i] < Key A[i + 1] = A[i] i = i - 1 A[i + 1] = key","title":"2.1-2"},{"location":"algorithm/en_2_getting_started/#21-3","text":"Consider the searching problem : - Input : A sequence of n numbers $ A = < a_{1}, a_{2},...,a_{n} > $ and a value v. - Output : An index i such that v = A[i] or the special value NIL if v dose not appear in A. Write pseudocode for linear search, which scan trough the sequence, looking for v. Using a loop invariant, prove that your algorithm is correct. Make sure that your loop invariant fulfills the three necessary properties.","title":"2.1-3"},{"location":"algorithm/en_2_getting_started/#pseudocode_1","text":"LINEAR-SEARCH(A, v) i = NIL For j = 1 to A.length if A[j] == v i = j","title":"pseudocode"},{"location":"algorithm/en_2_getting_started/#loop-invariants_1","text":"i is NIL or 1 <= i <= A.length. If A[j] == v then i = j. Initialization : i is NIL. Before prior iteration. Maintenance : When j increase loop invariants hold before iteration and remain true before next iteration. Termination : When the loop terminate it give us a solution that is true.","title":"loop invariants"},{"location":"algorithm/en_2_getting_started/#21-4","text":"Consider the problem of adding two n-bit binary integers, stored in two n-element arrays A and B. The sum of two integers should be stored in binary form in an (n+1)-element arrary C. State the problem formally and write pseudocode for adding two integers Input : A and B are n-bit binary integers, stored in two n-element arrary A and B. (A,B[i] = 0, 1) Output : C are n+1 bit binary integer, stored in (n+1) element arrary. ADD(A, B) carry = 0 For A.length downto 1 sum = A[i] + B[i] + carry C[i + 1] = sum % 2 carry = sum / 2 C[1] = carry code","title":"2.1-4"},{"location":"algorithm/en_2_getting_started/#analyzing-algorithms","text":"Predicting the resources that the algorithm required. We want to the performance measure of an algorithms to find best solution with machine-independent.","title":"Analyzing Algorithms"},{"location":"algorithm/en_2_getting_started/#measuring-resources","text":"Computational time Memory Communication Bandwidth","title":"Measuring Resources"},{"location":"algorithm/en_2_getting_started/#model-of-implementation","text":"A generic one processor. random-access machine(RAM): instructions are executed one after another, with no concurrent operations. We assume our RAM is almost identical with real machine. (also computational time of instructions.)","title":"Model of implementation"},{"location":"algorithm/en_2_getting_started/#analysis-of-insertion-sort","text":"Running time of a program as a function of the size of its input. $$ f(\\text{size of input}) = \\text{Running time}$$ - input size: depends on the problem being studied. We shall indicate which input size measures is being used with each problem we study. - running time: the number of primitive steps or operations executed. It is convenient to define the notion of step so it is as machine-independent as possible. - We shall assume that each execution of the $i$th line takes time $c_{i}$, where $c_{i}$ is a constant. - We let $t_{j}$ denote the number of times the while loop test in line 5 is executed for that value of j. INSERATION-SORT(A) cost times 1 for j = 2 to A.length c1 n 2 key = A[j] c2 n-1 3 // ... 0 n-1 4 i = j - 1 c4 n-1 5 while i > 0 and A[i] > key c5 $\\sum_{j=2}^{n} t_{j}$ 6 A[i + 1] = A[i] c6 $\\sum_{j=2}^{n} (t_{j} - 1)$ 7 i = i - 1 c7 $\\sum_{j=2}^{n} (t_{j} - 1)$ 8 A[i + 1] = key c8 n-1 The running time of algorithm is the sum of running time for each statement executed; $$ T(N) = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}\\sum_{j=2}^{n} t_{j} + c_{6}\\sum_{j=2}^{n} (t_{j} - 1) + c_{7}\\sum_{j=2}^{n} (t_{j} - 1) + c_{8}(n-1)$$ The best occurs if the array is already sorted. $$ \\begin{align} T(N) & = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}(n-1) + c_{8}(n-1) \\\\ & = (c_{1} + c_{2} + c_{4} + c_{5} + c_{8})n - (c_{2} + c_{4} + c_{5} + c_{8}) \\\\ & = an + b \\end{align} $$ It is thus a liner function of n. The worst occur if the array is in reversed order. We must compare each element A[j] with each element in the entire sorted subarray $A[1..j-1]$ and so $t_{j}$ for $ j = 2, 3, .., n$ $$ t_{1},..t_{j} = 2,..,n $$ Summation $$ \\begin{align} 1 + 2 + ... + n & = \\sum_{k=1}^{n} k \\\\ & = \\frac{1}{2}n(n+1) \\\\ \\end{align} $$","title":"Analysis of insertion sort"},{"location":"algorithm/en_2_getting_started/#apply-to-above-equations","text":"start from 2 not from 1 $$ \\sum_{j=2}^{n}t_{j} = \\sum_{j=2}^{n}j = \\frac{n(n+1)}{2} - 1$$ $$ \\sum_{j=2}^{n}(t_{j} - 1) = \\sum_{j=2}^{n}(j - 1) = \\frac{n(n-1)}{2}$$ $$ \\begin{align} T(N) & = c_{1}n + c_{2}(n-1) + c_{4}(n-1) + c_{5}\\Biggl( \\frac{n(n+1)}{2} - 1 \\Biggr) + c_{6}\\Biggl( \\frac{n(n-1)}{2} \\Biggr) + c_{7}\\Biggl( \\frac{n(n-1)}{2} \\Biggr)+ c_{8}(n-1) \\\\ & = \\biggl(\\frac{c_{5}}{2} + \\frac{c_{6}}{2} + \\frac{c_{7}}{2}\\biggr)n^{2} + \\biggl( c_{1} + c_{2} + c_{4} + \\frac{c_{5}}{2} - \\frac{c_{6}}{2} - \\frac{c_{7}}{2} + c_{8}\\biggr)n - (c_{2} + c_{4} + c_{5} + c_{8}) \\\\ & = an^{2} + bn + c \\end{align} $$ It is a quadratic function of n $an^{2} + bn + c$","title":"Apply to above equations"},{"location":"algorithm/en_2_getting_started/#worst-case-and-average-case-analysis","text":"","title":"Worst-case and average-case analysis"},{"location":"algorithm/en_2_getting_started/#from","text":"https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"From"},{"location":"etc/android/googleplay/googleplay_billing/","text":"Google Play Billing Let you sell the digital content from inside an Android app. Building Blocks Google Play : An online store where users can download digital products. Google Play Console The interface app developers use to publish apps on Google Play. Google API Console The console for managing backend APIs, such as Google Play Developer API. Android device Any device used to run Android apps. Android app An application intended to run on Android device. Secure backend server A developer provided server used to implement purchase verification or subscription features. The Play Store app The app responsible for managing all operations related to the Google Play Billing. Google Play Billing Library An API that developers use to implement Google Play Billing within an app. Google Play Developer API A REST API used to programmatically perform a number of publishing and app-management tasks. Subscription and In-App purchase API. Publishing API. Real-time developer notifications Server push notifications that let you monitor state changes. In-app product types One-time products The Google Play Console calls them managed products. The Google Play Billing library calls them INAPP. Subscriptions Purchase tokens and order IDs Google Play billing tracks products and transactions using purchase tokens and order IDs. - A purchase token is a string that represents a buyer's entitlement to a product on Google Play. - An order ID is a string that represents a financial transactions on Google Play. For one-time products, every purchase creates a new token and a new order ID. For subscriptions, an initial purchase creates a purchase token and an order ID. For each continuous billing period, the purchase token stays the same and a new order ID is issued. In-app product configuration options configuration options: Title - A short description of the in-app product, such as \"loot box.\" Description - A longer description of the in-app product. Product ID - A unique, human readable ID for your product. also called SKUs (Stock keeping unit) Price / Default Price - The amount user will pay for the app-product. The default price for one=time products reflects the amount the user will be charged for the product. The default price for subscription is the price will be charged after they enter a regular billing cycle. A single app can have multiple in-app products available for purchase, each with different Product ID and price. Unique one-time product configuration options. Promo codes are codes that a user uses to get a one-time product free of charge. Unique subscription product configuration options. Billing period : The frequency at which a user is charged while their subscription is active. weekly, \"1, 3, 6 months\", annual Free trial period : An amount of time during which a user may access a subscription without being billed. Introductory price : The price of the subscription over a certain number of initial, \"introductory\" billing period. Grace period : The amount of time a user's subscription will remain active, giving the user additional time to fix their payment issue. Account hold : The state of a subscription can enter when a user does not update their form of payment during the grace period.","title":"Google Play Billing"},{"location":"etc/android/googleplay/googleplay_billing/#google-play-billing","text":"Let you sell the digital content from inside an Android app.","title":"Google Play Billing"},{"location":"etc/android/googleplay/googleplay_billing/#building-blocks","text":"Google Play : An online store where users can download digital products. Google Play Console The interface app developers use to publish apps on Google Play. Google API Console The console for managing backend APIs, such as Google Play Developer API. Android device Any device used to run Android apps. Android app An application intended to run on Android device. Secure backend server A developer provided server used to implement purchase verification or subscription features. The Play Store app The app responsible for managing all operations related to the Google Play Billing. Google Play Billing Library An API that developers use to implement Google Play Billing within an app. Google Play Developer API A REST API used to programmatically perform a number of publishing and app-management tasks. Subscription and In-App purchase API. Publishing API. Real-time developer notifications Server push notifications that let you monitor state changes.","title":"Building Blocks"},{"location":"etc/android/googleplay/googleplay_billing/#in-app-product-types","text":"One-time products The Google Play Console calls them managed products. The Google Play Billing library calls them INAPP. Subscriptions","title":"In-app product types"},{"location":"etc/android/googleplay/googleplay_billing/#purchase-tokens-and-order-ids","text":"Google Play billing tracks products and transactions using purchase tokens and order IDs. - A purchase token is a string that represents a buyer's entitlement to a product on Google Play. - An order ID is a string that represents a financial transactions on Google Play. For one-time products, every purchase creates a new token and a new order ID. For subscriptions, an initial purchase creates a purchase token and an order ID. For each continuous billing period, the purchase token stays the same and a new order ID is issued.","title":"Purchase tokens and order IDs"},{"location":"etc/android/googleplay/googleplay_billing/#in-app-product-configuration-options","text":"configuration options: Title - A short description of the in-app product, such as \"loot box.\" Description - A longer description of the in-app product. Product ID - A unique, human readable ID for your product. also called SKUs (Stock keeping unit) Price / Default Price - The amount user will pay for the app-product. The default price for one=time products reflects the amount the user will be charged for the product. The default price for subscription is the price will be charged after they enter a regular billing cycle. A single app can have multiple in-app products available for purchase, each with different Product ID and price.","title":"In-app product configuration options"},{"location":"etc/android/googleplay/googleplay_billing/#unique-one-time-product-configuration-options","text":"Promo codes are codes that a user uses to get a one-time product free of charge.","title":"Unique one-time product configuration options."},{"location":"etc/android/googleplay/googleplay_billing/#unique-subscription-product-configuration-options","text":"Billing period : The frequency at which a user is charged while their subscription is active. weekly, \"1, 3, 6 months\", annual Free trial period : An amount of time during which a user may access a subscription without being billed. Introductory price : The price of the subscription over a certain number of initial, \"introductory\" billing period. Grace period : The amount of time a user's subscription will remain active, giving the user additional time to fix their payment issue. Account hold : The state of a subscription can enter when a user does not update their form of payment during the grace period.","title":"Unique subscription product configuration options."},{"location":"etc/android/googleplay/googleplay_billing_library/","text":"Google Play Billing Library About the code snippets TrivialDrive v2 - How to list the available products. - Start a purchase flow. - Record product consumption Steps to add Google Play Billing to an app Update your app's dependencies. Connect to Google Play. Query for in-app product details. Enable the purchase of an in-app product. Query for purchased items. Add one-time product-specific or subscription-specific code. Update your app dependencies dependencies { ... api 'com.android.billingclient:billing:1.2' } Connect to Google Play Connect to Google play using BillingClient. mBillingClient = BillingClient.newBuilder(mActivity).setListener(this).build(); mBillingClient.startConnection(new BillingClientStateListener() { @Override public void onBillingSetupFinished(@BillingResponse int billingResponseCode) { if (billingResponseCode == BillingResponse.OK) { // The billing client is ready. You can query purchases here. } } @Override public void onBillingServiceDisconnected() { // Try to restart the connection on the next request to // Google Play by calling the startConnection() method. } }); Query for in-app product details SkiType.INAPP for one-time products. SkiType.SUBS for subscription. Query products. List<String> skuList = new ArrayList<> (); skuList.add(\"premium_upgrade\"); skuList.add(\"gas\"); SkuDetailsParams.Builder params = SkuDetailsParams.newBuilder(); params.setSkusList(skuList).setType(SkuType.INAPP); mBillingClient.querySkuDetailsAsync(params.build(), new SkuDetailsResponseListener() { @Override public void onSkuDetailsResponse(int responseCode, List<SkuDetails> skuDetailsList) // Process the result. } }); non-consumable : A one-time product that can be used indefinitely is called a non-consumable. consumable : A one-time product with non-infinite use is called consumable. Show product details. for (SkuDetails skuDetails : skuDetailsList) { String sku = skuDetails.getSku(); String price = skuDetails.getPrice(); } Enable the purchase of an in-app product Start billing process BillingFlowParams flowParams = BillingFlowParams.newBuilder() .setSku(skuId) .setType(SkuType.INAPP) // SkuType.SUB for subscription .build(); int responseCode = mBillingClient.launchBillingFlow(flowParams); It will call onPurchasesUpdated to give us a result. @Override void onPurchasesUpdated(@BillingResponse int responseCode, List<Purchase> purchases) { if (responseCode == BillingResponse.OK && purchases != null) { for (Purchase purchase : purchases) { handlePurchase(purchase); } } else if (responseCode == BillingResponse.USER_CANCELED) { // Handle an error caused by a user cancelling the purchase flow. } else { // Handle any other error codes. } } Successful purchases also generate a purchase token, which is unique identifier representing the user and the product ID for in-app product they purchased. The purchase token for subscription stays the same for each billing period. Verify a purchase Verify a purchase on a server Ensure that the device-server handshake is secure. Verify order Id is a unique value that you have not previously processed. Verify that your app's key has signed the INAPP_PURCHASE_DATA that you process. sequenceDiagram Client ->>+ Google : purchase(appid, skuid) Google -->>- Client : purchaseToken, orderId Client ->>+ YourServer : verify(purchaseToken, orderId, account) YourServer ->>+ Google : Get purchase(appid, purchaseToken) Google -->>- YourServer : Purchase Detail YourServer -->>- Client : verifyed Best Practices Use a real-time service to deliver your content. User a remote server to deliver your content. Encrypt the content. Whenever a user accesses the content, you should verify the user entitlement. From Android Doc","title":"Google Play Billing Library"},{"location":"etc/android/googleplay/googleplay_billing_library/#google-play-billing-library","text":"","title":"Google Play Billing Library"},{"location":"etc/android/googleplay/googleplay_billing_library/#about-the-code-snippets","text":"TrivialDrive v2 - How to list the available products. - Start a purchase flow. - Record product consumption","title":"About the code snippets"},{"location":"etc/android/googleplay/googleplay_billing_library/#steps-to-add-google-play-billing-to-an-app","text":"Update your app's dependencies. Connect to Google Play. Query for in-app product details. Enable the purchase of an in-app product. Query for purchased items. Add one-time product-specific or subscription-specific code.","title":"Steps to add Google Play Billing to an app"},{"location":"etc/android/googleplay/googleplay_billing_library/#update-your-app-dependencies","text":"dependencies { ... api 'com.android.billingclient:billing:1.2' }","title":"Update your app dependencies"},{"location":"etc/android/googleplay/googleplay_billing_library/#connect-to-google-play","text":"Connect to Google play using BillingClient. mBillingClient = BillingClient.newBuilder(mActivity).setListener(this).build(); mBillingClient.startConnection(new BillingClientStateListener() { @Override public void onBillingSetupFinished(@BillingResponse int billingResponseCode) { if (billingResponseCode == BillingResponse.OK) { // The billing client is ready. You can query purchases here. } } @Override public void onBillingServiceDisconnected() { // Try to restart the connection on the next request to // Google Play by calling the startConnection() method. } });","title":"Connect to Google Play"},{"location":"etc/android/googleplay/googleplay_billing_library/#query-for-in-app-product-details","text":"SkiType.INAPP for one-time products. SkiType.SUBS for subscription. Query products. List<String> skuList = new ArrayList<> (); skuList.add(\"premium_upgrade\"); skuList.add(\"gas\"); SkuDetailsParams.Builder params = SkuDetailsParams.newBuilder(); params.setSkusList(skuList).setType(SkuType.INAPP); mBillingClient.querySkuDetailsAsync(params.build(), new SkuDetailsResponseListener() { @Override public void onSkuDetailsResponse(int responseCode, List<SkuDetails> skuDetailsList) // Process the result. } }); non-consumable : A one-time product that can be used indefinitely is called a non-consumable. consumable : A one-time product with non-infinite use is called consumable. Show product details. for (SkuDetails skuDetails : skuDetailsList) { String sku = skuDetails.getSku(); String price = skuDetails.getPrice(); }","title":"Query for in-app product details"},{"location":"etc/android/googleplay/googleplay_billing_library/#enable-the-purchase-of-an-in-app-product","text":"Start billing process BillingFlowParams flowParams = BillingFlowParams.newBuilder() .setSku(skuId) .setType(SkuType.INAPP) // SkuType.SUB for subscription .build(); int responseCode = mBillingClient.launchBillingFlow(flowParams); It will call onPurchasesUpdated to give us a result. @Override void onPurchasesUpdated(@BillingResponse int responseCode, List<Purchase> purchases) { if (responseCode == BillingResponse.OK && purchases != null) { for (Purchase purchase : purchases) { handlePurchase(purchase); } } else if (responseCode == BillingResponse.USER_CANCELED) { // Handle an error caused by a user cancelling the purchase flow. } else { // Handle any other error codes. } } Successful purchases also generate a purchase token, which is unique identifier representing the user and the product ID for in-app product they purchased. The purchase token for subscription stays the same for each billing period.","title":"Enable the purchase of an in-app product"},{"location":"etc/android/googleplay/googleplay_billing_library/#verify-a-purchase","text":"","title":"Verify a purchase"},{"location":"etc/android/googleplay/googleplay_billing_library/#verify-a-purchase-on-a-server","text":"Ensure that the device-server handshake is secure. Verify order Id is a unique value that you have not previously processed. Verify that your app's key has signed the INAPP_PURCHASE_DATA that you process. sequenceDiagram Client ->>+ Google : purchase(appid, skuid) Google -->>- Client : purchaseToken, orderId Client ->>+ YourServer : verify(purchaseToken, orderId, account) YourServer ->>+ Google : Get purchase(appid, purchaseToken) Google -->>- YourServer : Purchase Detail YourServer -->>- Client : verifyed","title":"Verify a purchase on a server"},{"location":"etc/android/googleplay/googleplay_billing_library/#best-practices","text":"Use a real-time service to deliver your content. User a remote server to deliver your content. Encrypt the content. Whenever a user accesses the content, you should verify the user entitlement.","title":"Best Practices"},{"location":"etc/android/googleplay/googleplay_billing_library/#from","text":"Android Doc","title":"From"},{"location":"etc/android/googleplay/overview/","text":"Overview Sequence flow of Google Play Google Play Store sequenceDiagram Client ->>+ Google : Connection Google -->>- Client : void Client ->>+ Google : querySkuDetails(params) Google -->>- Client : skuDetails Client ->>+ Google : purchase(appid, skuid) Google -->>- Client : purchaseToken, orderId Client ->>+ YourServer : verify(purchaseToken, orderId) YourServer ->>+ Google : Get purchase(appid, purchaseToken) Google -->>- YourServer : Purchase Detail YourServer -->>- Client : verified","title":"Overview"},{"location":"etc/android/googleplay/overview/#overview","text":"Sequence flow of Google Play","title":"Overview"},{"location":"etc/android/googleplay/overview/#google-play-store","text":"sequenceDiagram Client ->>+ Google : Connection Google -->>- Client : void Client ->>+ Google : querySkuDetails(params) Google -->>- Client : skuDetails Client ->>+ Google : purchase(appid, skuid) Google -->>- Client : purchaseToken, orderId Client ->>+ YourServer : verify(purchaseToken, orderId) YourServer ->>+ Google : Get purchase(appid, purchaseToken) Google -->>- YourServer : Purchase Detail YourServer -->>- Client : verified","title":"Google Play Store"},{"location":"etc/android/publish/1_publish_overview/","text":"Publish your app You prepare application for release. You release application to user. Preparing your app for release Configuring your application for release. Building and signing a release version of your application. Testing the release version of your application. Updating application resources for release. Preparing remote servers and services that your application depends on. Releasing your app to users Releasing through an app marketplace Releasing your app on Google Play Google Play is a publishing platform that helps you publicize, sell and distribute your app to users around the world. - Preparing promotional materials. - Configuring options and uploading assets. - Publishing the release version of your applications.","title":"Publish your app"},{"location":"etc/android/publish/1_publish_overview/#publish-your-app","text":"You prepare application for release. You release application to user.","title":"Publish your app"},{"location":"etc/android/publish/1_publish_overview/#preparing-your-app-for-release","text":"Configuring your application for release. Building and signing a release version of your application. Testing the release version of your application. Updating application resources for release. Preparing remote servers and services that your application depends on.","title":"Preparing your app for release"},{"location":"etc/android/publish/1_publish_overview/#releasing-your-app-to-users","text":"","title":"Releasing your app to users"},{"location":"etc/android/publish/1_publish_overview/#releasing-through-an-app-marketplace","text":"","title":"Releasing through an app marketplace"},{"location":"etc/android/publish/1_publish_overview/#releasing-your-app-on-google-play","text":"Google Play is a publishing platform that helps you publicize, sell and distribute your app to users around the world. - Preparing promotional materials. - Configuring options and uploading assets. - Publishing the release version of your applications.","title":"Releasing your app on Google Play"},{"location":"etc/android/publish/2_prepare_for_release/","text":"Prepare for release Introduction Release-ready APK file is signed with your own certificate and it is optimized with the zipalign tool. Gathering materials and resources Cryptographic keys The Android system requires that each installed application be digitally signed with a certificate that is owned by the application's developer (this is, a certificate for which the developer holds the private key). The Android system uses the certificate as a means of identifying the author of an application and establishing trust relationships between applications Application icon End User License Agreement (EULA) Miscellaneous materials Configuring Your Application for release Choose a good package name Turn off logging and debugging Clean up your project directories Review and update your manifest and Gradle build settings Address compatibility issues Update URLs for servers and services Implement licensing (if you are releasing on Google Play) Building Your application for release Preparing external servers and resources Testing your application for release","title":"Prepare for release"},{"location":"etc/android/publish/2_prepare_for_release/#prepare-for-release","text":"","title":"Prepare for release"},{"location":"etc/android/publish/2_prepare_for_release/#introduction","text":"Release-ready APK file is signed with your own certificate and it is optimized with the zipalign tool.","title":"Introduction"},{"location":"etc/android/publish/2_prepare_for_release/#gathering-materials-and-resources","text":"","title":"Gathering materials and resources"},{"location":"etc/android/publish/2_prepare_for_release/#cryptographic-keys","text":"The Android system requires that each installed application be digitally signed with a certificate that is owned by the application's developer (this is, a certificate for which the developer holds the private key). The Android system uses the certificate as a means of identifying the author of an application and establishing trust relationships between applications","title":"Cryptographic keys"},{"location":"etc/android/publish/2_prepare_for_release/#application-icon","text":"","title":"Application icon"},{"location":"etc/android/publish/2_prepare_for_release/#end-user-license-agreement-eula","text":"","title":"End User License Agreement (EULA)"},{"location":"etc/android/publish/2_prepare_for_release/#miscellaneous-materials","text":"","title":"Miscellaneous materials"},{"location":"etc/android/publish/2_prepare_for_release/#configuring-your-application-for-release","text":"Choose a good package name Turn off logging and debugging Clean up your project directories Review and update your manifest and Gradle build settings Address compatibility issues Update URLs for servers and services Implement licensing (if you are releasing on Google Play)","title":"Configuring Your Application for release"},{"location":"etc/android/publish/2_prepare_for_release/#building-your-application-for-release","text":"","title":"Building Your application for release"},{"location":"etc/android/publish/2_prepare_for_release/#preparing-external-servers-and-resources","text":"","title":"Preparing external servers and resources"},{"location":"etc/android/publish/2_prepare_for_release/#testing-your-application-for-release","text":"","title":"Testing your application for release"},{"location":"etc/android/publish/3_version/","text":"Version your app Set application version information versionCode - A positive integer used as an internal version number. versionName - A string used as the version number shown to users. android { defaultConfig { ... versionCode 2 versionName \"1.1\" } productFlavors { demo { ... versionName \"1.1-demo\" } full { ... } } } Specify API level requirements minSdkVersion - The minimum version of the Android platform on which the app will run. targetSdkVersion - Specifies the API level on which the app is designed to run. andorid { defaultConfig { ... minSdkVersion 14 targetSdkVerison 24 } productFlavers { main { ... } afterLollipop { ... minSdkVersion 21 } } }","title":"Version your app"},{"location":"etc/android/publish/3_version/#version-your-app","text":"","title":"Version your app"},{"location":"etc/android/publish/3_version/#set-application-version-information","text":"versionCode - A positive integer used as an internal version number. versionName - A string used as the version number shown to users. android { defaultConfig { ... versionCode 2 versionName \"1.1\" } productFlavors { demo { ... versionName \"1.1-demo\" } full { ... } } }","title":"Set application version information"},{"location":"etc/android/publish/3_version/#specify-api-level-requirements","text":"minSdkVersion - The minimum version of the Android platform on which the app will run. targetSdkVersion - Specifies the API level on which the app is designed to run. andorid { defaultConfig { ... minSdkVersion 14 targetSdkVerison 24 } productFlavers { main { ... } afterLollipop { ... minSdkVersion 21 } } }","title":"Specify API level requirements"},{"location":"etc/android/publish/4_sign/","text":"Sign your app Certificates and keystores To help Android ensure that any future updates to your app are authentic and come from the original author. It needs a tool for identifying author. Android use public/private key pairs. A public-key certificate, also known as a digital certificate or an identity certificate is a public key. The public-key certificate serve as a \"fingerprint\" that uniquely associates the APK or app bundle to you and your corresponding private key. A keystore is a binary file that contains one or more private keys. Sign your debug build Android Studio automatically signs your app with a debug certificate generated by the Android SDK tools in $HOME/.android/debug.keystore . Expire of the debug certificate. When the certificate expires, you will get a build error. To fix this problem, simply delete the debug.keystore Manage your key Manage your own key and keystore. Use App Signing by Google Play. Manage your own key and keystore You are responsible for securing the key and the keystore. - A key(App signing key) is a private key. - A keystore is a binary file contains keys. If you loose access to your key or key is compromised, Google cannot retrieve the app singing key for your Use App Signing by Google Play (recommended) You export and encrypt your app signing key using the tool provided by Google Play, and then upload it to Google. Then you create a separate upload key and register it with Google. When you are ready to publish, you sign your app using the upload key and upload it Google Play. Google Play verify your identity and sing your APK(s) with your app signing key for distribution. When you lose your upload key, you can revoke your old upload key and generate a new one. Generate a key and keystore. You can generate one using Android Studio 0. Build > Build > Generate Signed Bundle/APK Configure gradle.build android { signingConfigs { release { storeFile project.KEYSTORE_STORE_FILE storePassword project.KEYSTORE_STORE_PASSWORD keyAlias project.KEYSTORE_KEY_ALIAS keyPassword project.KEYSTORE_KEY_PASSWORD } } buildTypes { release { ... signingConfig signingConfigs.release } } Sign your app from command line keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-alia Sign your app from command line","title":"Sign your app"},{"location":"etc/android/publish/4_sign/#sign-your-app","text":"","title":"Sign your app"},{"location":"etc/android/publish/4_sign/#certificates-and-keystores","text":"To help Android ensure that any future updates to your app are authentic and come from the original author. It needs a tool for identifying author. Android use public/private key pairs. A public-key certificate, also known as a digital certificate or an identity certificate is a public key. The public-key certificate serve as a \"fingerprint\" that uniquely associates the APK or app bundle to you and your corresponding private key. A keystore is a binary file that contains one or more private keys.","title":"Certificates and keystores"},{"location":"etc/android/publish/4_sign/#sign-your-debug-build","text":"Android Studio automatically signs your app with a debug certificate generated by the Android SDK tools in $HOME/.android/debug.keystore .","title":"Sign your debug build"},{"location":"etc/android/publish/4_sign/#expire-of-the-debug-certificate","text":"When the certificate expires, you will get a build error. To fix this problem, simply delete the debug.keystore","title":"Expire of the debug certificate."},{"location":"etc/android/publish/4_sign/#manage-your-key","text":"Manage your own key and keystore. Use App Signing by Google Play.","title":"Manage your key"},{"location":"etc/android/publish/4_sign/#manage-your-own-key-and-keystore","text":"You are responsible for securing the key and the keystore. - A key(App signing key) is a private key. - A keystore is a binary file contains keys. If you loose access to your key or key is compromised, Google cannot retrieve the app singing key for your","title":"Manage your own key and keystore"},{"location":"etc/android/publish/4_sign/#use-app-signing-by-google-play-recommended","text":"You export and encrypt your app signing key using the tool provided by Google Play, and then upload it to Google. Then you create a separate upload key and register it with Google. When you are ready to publish, you sign your app using the upload key and upload it Google Play. Google Play verify your identity and sing your APK(s) with your app signing key for distribution. When you lose your upload key, you can revoke your old upload key and generate a new one.","title":"Use App Signing by Google Play (recommended)"},{"location":"etc/android/publish/4_sign/#generate-a-key-and-keystore","text":"You can generate one using Android Studio 0. Build > Build > Generate Signed Bundle/APK","title":"Generate a key and keystore."},{"location":"etc/android/publish/4_sign/#configure-gradlebuild","text":"android { signingConfigs { release { storeFile project.KEYSTORE_STORE_FILE storePassword project.KEYSTORE_STORE_PASSWORD keyAlias project.KEYSTORE_KEY_ALIAS keyPassword project.KEYSTORE_KEY_PASSWORD } } buildTypes { release { ... signingConfig signingConfigs.release } }","title":"Configure gradle.build"},{"location":"etc/android/publish/4_sign/#sign-your-app-from-command-line","text":"keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-alia","title":"Sign your app from command line"},{"location":"etc/android/publish/4_sign/#sign-your-app-from-command-line_1","text":"","title":"Sign your app from command line"},{"location":"etc/books/2018_12_lovethatdog/","text":"Love that dog Feel It was easy and fun. I realized I can cry while reading a book wrote by English. This was my first novel which wrote in English.","title":"Love that dog"},{"location":"etc/books/2018_12_lovethatdog/#love-that-dog","text":"","title":"Love that dog"},{"location":"etc/books/2018_12_lovethatdog/#feel","text":"It was easy and fun. I realized I can cry while reading a book wrote by English. This was my first novel which wrote in English.","title":"Feel"},{"location":"etc/idea/launcher/","text":"Luncher App Goal \uc54c\ud504\ub808\ub4dc\uc640 \uac19\uc740 \uc548\ub4dc\ub85c\uc774\ub4dc \ub7f0\ucc98\ub97c \ub9cc\ub4e4\uc790. Why? \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc571\uc744 \ucc3e\uc744 \ub54c \uadc0\ucc2e\ub2e4. Functions \ucd08\uc131 \uac80\uc0c9\uc774 \ub41c\ub2e4. \ub7f0\uccd0\ub97c \ub9cc\ub4e4\uace0 \ub0a0\uc790, wifi, \uc704\uce58 \ub4f1\uc744 \uc0ac\uc6a9\ud574 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \uc571\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc0ac\uc6a9\ud574 \ub7f0\ucc98\uc5d0 \ub178\ucd9c\ub418\ub294 \uac83\ub4e4\uc744 \ud559\uc2b5\uc2dc\ud0a8\ub2e4. Formula \\( P(\\text{Prioriry} | \\text{date, wifi, lat, lng}) \\)","title":"Luncher App"},{"location":"etc/idea/launcher/#luncher-app","text":"","title":"Luncher App"},{"location":"etc/idea/launcher/#goal","text":"\uc54c\ud504\ub808\ub4dc\uc640 \uac19\uc740 \uc548\ub4dc\ub85c\uc774\ub4dc \ub7f0\ucc98\ub97c \ub9cc\ub4e4\uc790.","title":"Goal"},{"location":"etc/idea/launcher/#why","text":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc571\uc744 \ucc3e\uc744 \ub54c \uadc0\ucc2e\ub2e4.","title":"Why?"},{"location":"etc/idea/launcher/#functions","text":"\ucd08\uc131 \uac80\uc0c9\uc774 \ub41c\ub2e4. \ub7f0\uccd0\ub97c \ub9cc\ub4e4\uace0 \ub0a0\uc790, wifi, \uc704\uce58 \ub4f1\uc744 \uc0ac\uc6a9\ud574 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \uc571\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc0ac\uc6a9\ud574 \ub7f0\ucc98\uc5d0 \ub178\ucd9c\ub418\ub294 \uac83\ub4e4\uc744 \ud559\uc2b5\uc2dc\ud0a8\ub2e4.","title":"Functions"},{"location":"etc/idea/launcher/#formula","text":"\\( P(\\text{Prioriry} | \\text{date, wifi, lat, lng}) \\)","title":"Formula"},{"location":"etc/idea/memo/","text":"Memo App Goal \uc5b4\ub518\uac00 \ub098\uac08\ub54c \uaf2d \uccb4\ud06c\ud574\uc57c \ud558\ub294 \ud56d\ubaa9\ub4e4\uc5d0 \ub300\ud55c \uc571 \uce7c\ub79c\ub354\uc640 \uacb0\ud569\ud574 \ub450\uba74 \uc88b\uc744\ub4ef Why? \uc544\uc774\ub97c \ub300\ub9ac\uace0 \uc678\ucd9c \ud560 \ub54c \ud544\uc218 \uc900\ube44\ubb3c\uc744 \ub204\ub77d \ud558\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4. \uac01 \uc77c \uc2dc \ub9c8\ub2e4 \ud2b9\uc815 \ub178\ud2b8\ub97c \ubcf4\uc5ec\uc8fc\uace0 \ub9ac\ub9c8\uc778\ub4dc \ud574\uc8fc\ub294 \uc571","title":"Memo App"},{"location":"etc/idea/memo/#memo-app","text":"","title":"Memo App"},{"location":"etc/idea/memo/#goal","text":"\uc5b4\ub518\uac00 \ub098\uac08\ub54c \uaf2d \uccb4\ud06c\ud574\uc57c \ud558\ub294 \ud56d\ubaa9\ub4e4\uc5d0 \ub300\ud55c \uc571 \uce7c\ub79c\ub354\uc640 \uacb0\ud569\ud574 \ub450\uba74 \uc88b\uc744\ub4ef","title":"Goal"},{"location":"etc/idea/memo/#why","text":"\uc544\uc774\ub97c \ub300\ub9ac\uace0 \uc678\ucd9c \ud560 \ub54c \ud544\uc218 \uc900\ube44\ubb3c\uc744 \ub204\ub77d \ud558\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4. \uac01 \uc77c \uc2dc \ub9c8\ub2e4 \ud2b9\uc815 \ub178\ud2b8\ub97c \ubcf4\uc5ec\uc8fc\uace0 \ub9ac\ub9c8\uc778\ub4dc \ud574\uc8fc\ub294 \uc571","title":"Why?"},{"location":"etc/seminar/learn_to_learn/","text":"How to learn to learn? Idea \uac00\uc7a5 \uae30\ubcf8\uc801\uc778 \ud50c\ub79c\uc744 \uc9dc\ub294 \ubc29\ubc95 \ubaa9\uc801\uc744 \uc54c\uace0 \ud559\uc2b5\ud558\uba74 \ube60\ub974\ub2e4. \uc6b0\ub9ac\ub294 \ucd08\uae30\uac12\uc744 \uc54c\uace0 \ud559\uc2b5\ud55c\ub2e4. \uc778\uac04\uc740 \ucd08\uae30\uac12\uc744 \ucc45\uc73c\ub85c \uc804\ub2ec\ud574 \uc900\ub2e4. \ub1cc\ub294 \uadfc\uc721\uc774\ub2e4. \ub1cc\ub294 \uc138\ud3ec\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4. \ub274\ub860\uc758 \ud2b9\uc9d5 \ub1cc\uc758 \uc0dd\uae40\uc0c8 \uc2ec\ubcfc\ud654 \ub2e8\uae30 \uc800\uc7a5 \uc7a5\uc18c \uc608\uc81c \ud504\ub85c\uadf8\ub798\ubc0d \uc774\uc57c\uae30 \ud560 \uac83\ub4e4 \ud559\uc2b5\uc774\ub780? \ud6a8\uc728\uc801\uc778 \ud559\uc2b5\uc774\ub780? \ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc774\ub780? \ud559\uc2b5 \ubaa8\ub378\uacfc \uc608\uc81c \ud559\uc2b5\ud558\ub294 \ubc29\ubc95 \ub0a8\uc740\uac83. Goal \ub2e8\uc704 \uc2dc\uac04\uc548\uc5d0 \ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc744 \ud558\uace0 \uc2f6\ub2e4. \ud559\uc2b5\uc774\ub780. \uacbd\ud5d8 \ub610\ub294 \ud6c8\ub828\uc744 \ud1b5\ud574 \ud2b9\uc815 \ubd84\uc57c\uc5d0\uc11c \ud2b9\uc815 \uc0c1\ud669\uc774 \uc8fc\uc5b4 \uc84c\uc744\ub54c \ubaa9\uc801 \ub2ec\uc131\uc744 \uc704\ud55c \ucd5c\uc801\uc758 \ubc29\uc548\uc744 \uc120\ud0dd\ud558\ub294\uac83 \uc774\ub77c\uace0 \uc815\uc758\ud55c\ub2e4. \uc774\ud574\ub97c \uc704\ud574 \uc608\ub97c \ub4e4\uc5b4\ubcf4\uc790. \uc601\uc5b4\ub97c \ud559\uc2b5\ud55c\ub2e4\uace0 \ud558\uc790. \uc774\ub54c\uc758 \ub2ec\uc131 \ubaa9\uc801\uc740 \uc601\uc5b4\uad8c \uc0ac\ub78c\ub4e4\uacfc \uc720\uc0ac\ud558\uac8c \uc758\uc0ac\ud45c\ud604\uc744 \ubaa9\uc801\uc73c\ub85c \uc7a1\uc744 \uc218 \uc788\ub2e4. \ub2e4\uc74c\uc5d0 \uc54c\ub9de\uc740 \ub3d9\uc0ac\ub97c \uace0\ub974\uc2dc\uc624. I __ a boy. 0. am 0. are \uc704\uc758 \ubb38\uc81c\ub97c \ud559\uc2b5\uc774\ub780 \uc815\uc758\uc5d0 \ub300\uc785\ud574\ubcf4\uc790. - \ud2b9\uc815\uc0c1\ud669 = \ubb38\uc81c \ud480\uc774 - \ubaa9\uc801 \ub2ec\uc131 = \uc601\uc5b4\uad8c \uc0ac\ub78c\ub4e4\uacfc \uc720\uc0ac\ud558\uac8c \uc758\uc0ac \ud45c\ud604 - \uc120\ud0dd\uc9c0 = 1. am, 2. are - \ucd5c\uc801 \ubc29\uc548 = 1. \ucd5c\uc801 \ubc29\uc548\uc774 1\uc778 \uc774\uc720\ub294 \ubaa9\uc801\uc744 \ub2ec\uc131\ud558\uae30 \ub54c\ubb38\uc774\ub2e4. \uc704 \uc640 \uac19\uc740 \ubb38\uc81c\uac00 100 \uac1c \uc788\ub294 \uc601\uc5b4 \uc2dc\ud5d8\uc9c0\ub97c \uac00\uc815\ud574\ubcf4\uc790 (\ubb38\uc81c 1\uac1c\ub2f9 1\uc810) \ud6a8\uc728\uc801\uc778 \ud559\uc2b5\uc774\ub780? \ub9cc\uc57d \uc6b0\ub9ac\uc758 \ubaa9\uc801\uc778 \uc720\uc0ac\ud55c \uc758\uc0ac\ud45c\ud604 == \ub192\uc740 \uc810\uc218\ub77c\uace0 \uc815\uc758\ud558\uc790. \uadf8\ub807\ub2e4\uba74 \uc801\uc740 \uc2dc\uac04\uc548\uc5d0 \ub192\uc740 \uc810\uc218\ub97c \ubc1b\ub294\uac8c \ud6a8\uc728 \uc801\uc778 \ud559\uc2b5\uc774\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. (\uc774\uac8c \uc0ac\uad50\uc721\uc758 \ud3d0\ud61c\ub97c \ubd88\ub7ec\uc654\ub2e4...) \ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc774\ub780. \ub9cc\uc57d \uc6b0\ub9ac\uc758 \ubaa9\uc801\uc778 \uc720\uc0ac\ud55c \uc758\uc0ac\ud45c\ud604 == \ub192\uc740 \uc810\uc218\ub77c\uace0 \uc815\uc758\ud558\uc790. \uadf8\ub807\ub2e4\uba74 \ubb38\uc81c\uac00 \ubcc0\ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \uac00\uc815\ud558\uba74 \uc2dc\ud5d8\uc9c0 \uc815\ub2f5 \ubc88\ud638\ub97c \uc65c\uc6b0\ub294\uac1c \ud6a8\uacfc\uc801\uc774\ub2e4. \ud558\uc9c0\ub9cc \ubb38\uc81c\uac00 \ubcc0\ud55c\ub2e4\uba74 \ubb38\ubc95\uc744 \ubc30\uc6b0\ub294\uac8c \ub354 \ube60\ub974\ub2e4. \uc989 \ubaa9\uc801\uc5d0 \ub530\ub77c \ud559\uc2b5 \ubc29\ubc95\uc774 \ubcc0\ud558\uac8c \ub41c\ub2e4. \ud559\uc2b5\uc774\ub780? \uc870\uae08 \ub354 \uc704\uc758 \uc608\uc81c\ub97c \uc815\ud655\ud558\uace0 general \ud558\uac8c \uc815\uc758\ud574 \ubcf4\uc790. \uc544\ub798\uc758 \uc815\uc758\ub294 \uc0dd\ubb3c\ud559\uc5d0\uc11c\uc758 \uc778\uac04\uc758 \uc815\uc758 \uc774\uba70 \ubcf8\uc778\uacfc\ub294 \uc808\ub300\uc801\uc73c\ub85c \ubb34\uad00\ud558\ub2e4. \uc778\uac04\uc740 \ud2b9\uc815 \ubaa9\uc801\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud55c \uc54c\uace0\ub9ac\uc998\ub4e4\uc758 \uc9d1\ud569\uc774\ub2e4. \uc704\uc758 \uac00\uc815 \ub300\ub85c\ub77c\uba74 \uc6b0\ub9ac\ub294 \uc778\uac04\uc758 \ud559\uc2b5 \ubaa8\ub378\uc744 \uc54c\uace0\ub9ac\uc998\uc5d0 \uc720\ube44\ud574\uc11c \ud45c\ud604 \ud560 \uc218 \uc788\ub2e4. (\ubb3c\ub860 \ubaa8\ub4e0 \uc720\ube44\ub294 \ud2c0\ub9b0\ub2e4.) \ud559\uc2b5\uc758 \uc815\uc758 \ud559\uc2b5\uc744 \ud1b5\ud574 \ud2b9\uc815 \uc5c5\ubb34\uc758 \ucd5c\uc801 \uc810\uc218\ub97c \ub2ec\uc131\ud558\ub294 \uc54c\uace0\ub9ac\uc998\uc744 \uc6b0\ub9ac\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc815\uc758\ud55c\ub2e4. A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P if its performance at tasks in T, as measured by P, improves with experience E. E \ub294 \uc601\uc5b4 \uc2dc\ud5d8 \uacf5\ubd80 \ub77c\uace0 \ud558\uc790. T \ub294 \uc601\uc5b4 \uc2dc\ud5d8 \ubb38\uc81c\ub97c \ud478\ub294\uac83 \uc774\ub77c\uace0 \ud558\uc790. P \ub294 \uc810\uc218\ub77c\uace0 \ud558\uc790. \uc778\uac04\uc774 \uc601\uc5b4 \uc2dc\ud5d8 \uc871\ubcf4\ub97c \ud480\uc5b4\uc11c \uc2dc\ud5d8\uc5d0\uc11c \uc88b\uc740 \uc810\uc218\ub97c \ubc1b\ub294 \ub2e4\uace0 \ud55c\ub2e4\uba74 \uc704\uc758 \uc815\uc758\uc640 \uc77c\uce58\ud55c\ub2e4. \ud559\uc2b5 \ubaa8\ub378 \ub2e4\uc2dc \ubb38\uc81c\ub85c \ub3cc\uc544\uac00 \ubcf4\uc790. I __ a boy. 1. am 2. are \uc774 \uc608\uc81c\uc5d0\uc11c \uc6b0\ub9ac\ub294 \ubb34\uc5c7\uc73c\ub85c \ub2f5\uc744 \ub0b4\ub9ac\ub294 \uac78\uae4c? \uc8fc\uc5b4\uc758 \uc778\uce6d\uc5d0 \ub530\ub77c\uc11c \ub3d9\uc0ac\uac00 \ubcc0\ud654\ud55c\ub2e4 \ub77c\ub294 \ub8f0\ub85c \uacb0\uc815\ub41c\ub2e4. \uc774\ub8f0\uc740 \uc5b4\ub5bb\uac8c \ub098\uc62c\uae4c? I \uac00 \ub098\uc628 \ud6c4 am \uc774 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294\uac00 are \uac00 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294\uac00 \ub77c\ub294 \ubb38\uc81c\uac00 \ub41c\ub2e4. \uc601\uc5b4 \ubb38\uc7a5\uc5d0\uc11c \ube48\ub3c4\uc218\ub97c \uc870\uc0ac\ud588\ub354\ub2c8 I \uac00 \uc0ac\uc6a9 \ub418\uba74 am \uc774 99\ubc88 are \uac00 1\ubc88 \ub098\uc628\ub2e4\uace0 \ud558\uc790. \uc6b0\ub9ac\uac00 \uc704\uc758 \uc0ac\uc2e4\uc744 \uc54c\uace0 \uc788\ub2e4\uba74 \ubb38\uc81c\ub294 \uc544\ub798\uc640 \uac19\uc774 \ubcc0\uacbd \ud560 \uc218 \uc788\ub2e4. $P(am | I) = 0.99$ $P(are | I) = 0.01$ \uc989 \uc6b0\ub9ac\uac00 \ud559\uc2b5\uc774\ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uc740 \ud2b9\uc815 \uc870\uac74\uc774 \uc8fc\uc5b4\uc84c\uc744\ub54c \uac00\uc7a5 \uac00\ub2a5\uc131\uc774 \ub192\uc740 \uac83\uc744 \uc120\ud0dd\ud55c\ub2e4 \ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. \uadf8\ub7ec\uba74 \uc5b4\ub5bb\uac8c \ud558\uba74 \uc800\ub7f0\uac78 \ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc744\uae4c? \uc5ec\ub7ec \ubc29\ubc95\uc774 \uc788\uaca0\uc9c0\ub9cc \ucd5c\ucd08\uc5d0 \uade0\uc77c\ud558\uac8c \ud655\ub960\uc744 \ubc30\uce58\ud55c\ub2e4. $P(am | I) = 0.50$ $P(are | I) = 0.50$ \uc0c8\ub85c\uc6b4 \ubb38\uc7a5\uc744 \uc77d\uc744\ub54c\ub9c8\ub2e4 \ud574\ub2f9 \ud655\ub960\uc744 $+-1$ \uc529 \ubcc0\ub3d9 \uc2dc\ud0a8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 I am a girl \uc744 \ubd24\ub2e4\uba74 \ud655\ub960\uc744 \ubcc0\ub3d9 \uc2dc\ud0a8\ub2e4. $P(am | I) = 0.51$ $P(are | I) = 0.49$ \uadf8\ub7ec\uba74 \uc6b0\ub9ac\ub294 \uc5b8\uc820\uac00 \uc544\ub798\uc758 \uac12\uc744 \uac19\uac8c \ub418\uace0 \ud574\ub2f9 \ud559\uc2b5\uc774 \uc644\ub8cc\ub41c \uc0c1\ud0dc\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. $P(am | I) = 0.99$ $P(are | I) = 0.01$ \uc704\uc758 \ubaa8\ub378\uc744 \uac00\uc9c0\uace0 \uc774\uc81c \uc6b0\ub9ac\ub294 \uac00\uc124\ub4e4\uc744 \ud574\ub2f9 \ubaa8\ub378\uc5d0 \ube44\ucd94\uc5b4 \ubcfc\uac83\uc774\ub2e4. \uc608\uc81c \ud53c\ub4dc\ubc31 \uc704\uc758 \ubaa8\ub378\uc744 \ubb38\uc81c\uc758 \uc815\ub2f5\uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc758 \uac12\uc744 \uc218\uc815\ud55c\ub2e4. \uc989 \uc870\uac74\uc5d0 \ub300\ud55c \uc815\ub2f5\uc744 \uc544\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4. \uc798\ubabb\ub41c \ud53c\ub4dc\ubc31 \ub9cc\uc57d \uc6b0\ub9ac\uac00 I are \ub97c \ub354 \ub9ce\uc774 \ubcf4\uac8c \ub418\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c? \uc989 \uc798\ubabb\ub41c \ub2f5\uc774 \ub41c\ub2e4. \uc989 \uc815\ud655\ud55c \ud53c\ub4dc\ubc31\uc740 \uc911\uc694\ud558\ub2e4. \ub9cc\uc57d \ud53c\ub4dc\ubc31\uc774 \ub2a6\uc73c\uba74 \uc624\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c? \ubaa8\ub378\uc758 \ucd5c\uc801 \uac12\uc740 \uc804\ud600 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4. \uc989 \uc2dc\uac04 \ub0ad\ube44\ub2e4. \ub9cc\uc57d \ucd08\uae30\uac12\uc774 \uc5c6\uc73c\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c? \uc6b0\ub9ac\ub294 \ubaa8\ub378\uc758 \uc22b\uc790\ub97c \uac00\uac10 \uc2dc\ud0a8\ub2e4. \ub9cc\uc57d \ubaa8\ub378 \uc790\uccb4\uac00 \uc5c6\ub2e4\uba74 $\\infty$ \uc5d0 \uc5b4\ub5bb\uac12\uc744 \ub354\ud574\ub3c4 \uc798 \ubcc0\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc720\ub2db \uc2dc\uac04\uc548\uc5d0 \ub9ce\uc740 \uc9c0\uc2dd\uc744 \uc2b5\ub4dd\ud558\uace0 \uc2f6\ub2e4.","title":"How to learn to learn?"},{"location":"etc/seminar/learn_to_learn/#how-to-learn-to-learn","text":"","title":"How to learn to learn?"},{"location":"etc/seminar/learn_to_learn/#idea","text":"\uac00\uc7a5 \uae30\ubcf8\uc801\uc778 \ud50c\ub79c\uc744 \uc9dc\ub294 \ubc29\ubc95 \ubaa9\uc801\uc744 \uc54c\uace0 \ud559\uc2b5\ud558\uba74 \ube60\ub974\ub2e4. \uc6b0\ub9ac\ub294 \ucd08\uae30\uac12\uc744 \uc54c\uace0 \ud559\uc2b5\ud55c\ub2e4. \uc778\uac04\uc740 \ucd08\uae30\uac12\uc744 \ucc45\uc73c\ub85c \uc804\ub2ec\ud574 \uc900\ub2e4. \ub1cc\ub294 \uadfc\uc721\uc774\ub2e4. \ub1cc\ub294 \uc138\ud3ec\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4. \ub274\ub860\uc758 \ud2b9\uc9d5 \ub1cc\uc758 \uc0dd\uae40\uc0c8 \uc2ec\ubcfc\ud654 \ub2e8\uae30 \uc800\uc7a5 \uc7a5\uc18c \uc608\uc81c \ud504\ub85c\uadf8\ub798\ubc0d","title":"Idea"},{"location":"etc/seminar/learn_to_learn/#_1","text":"\ud559\uc2b5\uc774\ub780? \ud6a8\uc728\uc801\uc778 \ud559\uc2b5\uc774\ub780? \ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc774\ub780? \ud559\uc2b5 \ubaa8\ub378\uacfc \uc608\uc81c \ud559\uc2b5\ud558\ub294 \ubc29\ubc95 \ub0a8\uc740\uac83.","title":"\uc774\uc57c\uae30 \ud560 \uac83\ub4e4"},{"location":"etc/seminar/learn_to_learn/#goal","text":"\ub2e8\uc704 \uc2dc\uac04\uc548\uc5d0 \ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc744 \ud558\uace0 \uc2f6\ub2e4.","title":"Goal"},{"location":"etc/seminar/learn_to_learn/#_2","text":"\uacbd\ud5d8 \ub610\ub294 \ud6c8\ub828\uc744 \ud1b5\ud574 \ud2b9\uc815 \ubd84\uc57c\uc5d0\uc11c \ud2b9\uc815 \uc0c1\ud669\uc774 \uc8fc\uc5b4 \uc84c\uc744\ub54c \ubaa9\uc801 \ub2ec\uc131\uc744 \uc704\ud55c \ucd5c\uc801\uc758 \ubc29\uc548\uc744 \uc120\ud0dd\ud558\ub294\uac83 \uc774\ub77c\uace0 \uc815\uc758\ud55c\ub2e4. \uc774\ud574\ub97c \uc704\ud574 \uc608\ub97c \ub4e4\uc5b4\ubcf4\uc790. \uc601\uc5b4\ub97c \ud559\uc2b5\ud55c\ub2e4\uace0 \ud558\uc790. \uc774\ub54c\uc758 \ub2ec\uc131 \ubaa9\uc801\uc740 \uc601\uc5b4\uad8c \uc0ac\ub78c\ub4e4\uacfc \uc720\uc0ac\ud558\uac8c \uc758\uc0ac\ud45c\ud604\uc744 \ubaa9\uc801\uc73c\ub85c \uc7a1\uc744 \uc218 \uc788\ub2e4.","title":"\ud559\uc2b5\uc774\ub780."},{"location":"etc/seminar/learn_to_learn/#_3","text":"I __ a boy. 0. am 0. are \uc704\uc758 \ubb38\uc81c\ub97c \ud559\uc2b5\uc774\ub780 \uc815\uc758\uc5d0 \ub300\uc785\ud574\ubcf4\uc790. - \ud2b9\uc815\uc0c1\ud669 = \ubb38\uc81c \ud480\uc774 - \ubaa9\uc801 \ub2ec\uc131 = \uc601\uc5b4\uad8c \uc0ac\ub78c\ub4e4\uacfc \uc720\uc0ac\ud558\uac8c \uc758\uc0ac \ud45c\ud604 - \uc120\ud0dd\uc9c0 = 1. am, 2. are - \ucd5c\uc801 \ubc29\uc548 = 1. \ucd5c\uc801 \ubc29\uc548\uc774 1\uc778 \uc774\uc720\ub294 \ubaa9\uc801\uc744 \ub2ec\uc131\ud558\uae30 \ub54c\ubb38\uc774\ub2e4. \uc704 \uc640 \uac19\uc740 \ubb38\uc81c\uac00 100 \uac1c \uc788\ub294 \uc601\uc5b4 \uc2dc\ud5d8\uc9c0\ub97c \uac00\uc815\ud574\ubcf4\uc790 (\ubb38\uc81c 1\uac1c\ub2f9 1\uc810)","title":"\ub2e4\uc74c\uc5d0 \uc54c\ub9de\uc740 \ub3d9\uc0ac\ub97c \uace0\ub974\uc2dc\uc624."},{"location":"etc/seminar/learn_to_learn/#_4","text":"\ub9cc\uc57d \uc6b0\ub9ac\uc758 \ubaa9\uc801\uc778 \uc720\uc0ac\ud55c \uc758\uc0ac\ud45c\ud604 == \ub192\uc740 \uc810\uc218\ub77c\uace0 \uc815\uc758\ud558\uc790. \uadf8\ub807\ub2e4\uba74 \uc801\uc740 \uc2dc\uac04\uc548\uc5d0 \ub192\uc740 \uc810\uc218\ub97c \ubc1b\ub294\uac8c \ud6a8\uc728 \uc801\uc778 \ud559\uc2b5\uc774\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. (\uc774\uac8c \uc0ac\uad50\uc721\uc758 \ud3d0\ud61c\ub97c \ubd88\ub7ec\uc654\ub2e4...)","title":"\ud6a8\uc728\uc801\uc778 \ud559\uc2b5\uc774\ub780?"},{"location":"etc/seminar/learn_to_learn/#_5","text":"\ub9cc\uc57d \uc6b0\ub9ac\uc758 \ubaa9\uc801\uc778 \uc720\uc0ac\ud55c \uc758\uc0ac\ud45c\ud604 == \ub192\uc740 \uc810\uc218\ub77c\uace0 \uc815\uc758\ud558\uc790. \uadf8\ub807\ub2e4\uba74 \ubb38\uc81c\uac00 \ubcc0\ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \uac00\uc815\ud558\uba74 \uc2dc\ud5d8\uc9c0 \uc815\ub2f5 \ubc88\ud638\ub97c \uc65c\uc6b0\ub294\uac1c \ud6a8\uacfc\uc801\uc774\ub2e4. \ud558\uc9c0\ub9cc \ubb38\uc81c\uac00 \ubcc0\ud55c\ub2e4\uba74 \ubb38\ubc95\uc744 \ubc30\uc6b0\ub294\uac8c \ub354 \ube60\ub974\ub2e4. \uc989 \ubaa9\uc801\uc5d0 \ub530\ub77c \ud559\uc2b5 \ubc29\ubc95\uc774 \ubcc0\ud558\uac8c \ub41c\ub2e4.","title":"\ud6a8\uacfc\uc801\uc778 \ud559\uc2b5\uc774\ub780."},{"location":"etc/seminar/learn_to_learn/#_6","text":"\uc870\uae08 \ub354 \uc704\uc758 \uc608\uc81c\ub97c \uc815\ud655\ud558\uace0 general \ud558\uac8c \uc815\uc758\ud574 \ubcf4\uc790. \uc544\ub798\uc758 \uc815\uc758\ub294 \uc0dd\ubb3c\ud559\uc5d0\uc11c\uc758 \uc778\uac04\uc758 \uc815\uc758 \uc774\uba70 \ubcf8\uc778\uacfc\ub294 \uc808\ub300\uc801\uc73c\ub85c \ubb34\uad00\ud558\ub2e4. \uc778\uac04\uc740 \ud2b9\uc815 \ubaa9\uc801\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud55c \uc54c\uace0\ub9ac\uc998\ub4e4\uc758 \uc9d1\ud569\uc774\ub2e4. \uc704\uc758 \uac00\uc815 \ub300\ub85c\ub77c\uba74 \uc6b0\ub9ac\ub294 \uc778\uac04\uc758 \ud559\uc2b5 \ubaa8\ub378\uc744 \uc54c\uace0\ub9ac\uc998\uc5d0 \uc720\ube44\ud574\uc11c \ud45c\ud604 \ud560 \uc218 \uc788\ub2e4. (\ubb3c\ub860 \ubaa8\ub4e0 \uc720\ube44\ub294 \ud2c0\ub9b0\ub2e4.)","title":"\ud559\uc2b5\uc774\ub780?"},{"location":"etc/seminar/learn_to_learn/#_7","text":"\ud559\uc2b5\uc744 \ud1b5\ud574 \ud2b9\uc815 \uc5c5\ubb34\uc758 \ucd5c\uc801 \uc810\uc218\ub97c \ub2ec\uc131\ud558\ub294 \uc54c\uace0\ub9ac\uc998\uc744 \uc6b0\ub9ac\ub294 \uc544\ub798\uc640 \uac19\uc774 \uc815\uc758\ud55c\ub2e4. A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P if its performance at tasks in T, as measured by P, improves with experience E. E \ub294 \uc601\uc5b4 \uc2dc\ud5d8 \uacf5\ubd80 \ub77c\uace0 \ud558\uc790. T \ub294 \uc601\uc5b4 \uc2dc\ud5d8 \ubb38\uc81c\ub97c \ud478\ub294\uac83 \uc774\ub77c\uace0 \ud558\uc790. P \ub294 \uc810\uc218\ub77c\uace0 \ud558\uc790. \uc778\uac04\uc774 \uc601\uc5b4 \uc2dc\ud5d8 \uc871\ubcf4\ub97c \ud480\uc5b4\uc11c \uc2dc\ud5d8\uc5d0\uc11c \uc88b\uc740 \uc810\uc218\ub97c \ubc1b\ub294 \ub2e4\uace0 \ud55c\ub2e4\uba74 \uc704\uc758 \uc815\uc758\uc640 \uc77c\uce58\ud55c\ub2e4.","title":"\ud559\uc2b5\uc758 \uc815\uc758"},{"location":"etc/seminar/learn_to_learn/#_8","text":"\ub2e4\uc2dc \ubb38\uc81c\ub85c \ub3cc\uc544\uac00 \ubcf4\uc790. I __ a boy. 1. am 2. are \uc774 \uc608\uc81c\uc5d0\uc11c \uc6b0\ub9ac\ub294 \ubb34\uc5c7\uc73c\ub85c \ub2f5\uc744 \ub0b4\ub9ac\ub294 \uac78\uae4c? \uc8fc\uc5b4\uc758 \uc778\uce6d\uc5d0 \ub530\ub77c\uc11c \ub3d9\uc0ac\uac00 \ubcc0\ud654\ud55c\ub2e4 \ub77c\ub294 \ub8f0\ub85c \uacb0\uc815\ub41c\ub2e4. \uc774\ub8f0\uc740 \uc5b4\ub5bb\uac8c \ub098\uc62c\uae4c? I \uac00 \ub098\uc628 \ud6c4 am \uc774 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294\uac00 are \uac00 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294\uac00 \ub77c\ub294 \ubb38\uc81c\uac00 \ub41c\ub2e4. \uc601\uc5b4 \ubb38\uc7a5\uc5d0\uc11c \ube48\ub3c4\uc218\ub97c \uc870\uc0ac\ud588\ub354\ub2c8 I \uac00 \uc0ac\uc6a9 \ub418\uba74 am \uc774 99\ubc88 are \uac00 1\ubc88 \ub098\uc628\ub2e4\uace0 \ud558\uc790. \uc6b0\ub9ac\uac00 \uc704\uc758 \uc0ac\uc2e4\uc744 \uc54c\uace0 \uc788\ub2e4\uba74 \ubb38\uc81c\ub294 \uc544\ub798\uc640 \uac19\uc774 \ubcc0\uacbd \ud560 \uc218 \uc788\ub2e4. $P(am | I) = 0.99$ $P(are | I) = 0.01$ \uc989 \uc6b0\ub9ac\uac00 \ud559\uc2b5\uc774\ub77c\uace0 \ub9d0\ud558\ub294 \uac83\uc740 \ud2b9\uc815 \uc870\uac74\uc774 \uc8fc\uc5b4\uc84c\uc744\ub54c \uac00\uc7a5 \uac00\ub2a5\uc131\uc774 \ub192\uc740 \uac83\uc744 \uc120\ud0dd\ud55c\ub2e4 \ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. \uadf8\ub7ec\uba74 \uc5b4\ub5bb\uac8c \ud558\uba74 \uc800\ub7f0\uac78 \ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc744\uae4c? \uc5ec\ub7ec \ubc29\ubc95\uc774 \uc788\uaca0\uc9c0\ub9cc \ucd5c\ucd08\uc5d0 \uade0\uc77c\ud558\uac8c \ud655\ub960\uc744 \ubc30\uce58\ud55c\ub2e4. $P(am | I) = 0.50$ $P(are | I) = 0.50$ \uc0c8\ub85c\uc6b4 \ubb38\uc7a5\uc744 \uc77d\uc744\ub54c\ub9c8\ub2e4 \ud574\ub2f9 \ud655\ub960\uc744 $+-1$ \uc529 \ubcc0\ub3d9 \uc2dc\ud0a8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 I am a girl \uc744 \ubd24\ub2e4\uba74 \ud655\ub960\uc744 \ubcc0\ub3d9 \uc2dc\ud0a8\ub2e4. $P(am | I) = 0.51$ $P(are | I) = 0.49$ \uadf8\ub7ec\uba74 \uc6b0\ub9ac\ub294 \uc5b8\uc820\uac00 \uc544\ub798\uc758 \uac12\uc744 \uac19\uac8c \ub418\uace0 \ud574\ub2f9 \ud559\uc2b5\uc774 \uc644\ub8cc\ub41c \uc0c1\ud0dc\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. $P(am | I) = 0.99$ $P(are | I) = 0.01$ \uc704\uc758 \ubaa8\ub378\uc744 \uac00\uc9c0\uace0 \uc774\uc81c \uc6b0\ub9ac\ub294 \uac00\uc124\ub4e4\uc744 \ud574\ub2f9 \ubaa8\ub378\uc5d0 \ube44\ucd94\uc5b4 \ubcfc\uac83\uc774\ub2e4.","title":"\ud559\uc2b5 \ubaa8\ub378"},{"location":"etc/seminar/learn_to_learn/#_9","text":"","title":"\uc608\uc81c"},{"location":"etc/seminar/learn_to_learn/#_10","text":"\uc704\uc758 \ubaa8\ub378\uc744 \ubb38\uc81c\uc758 \uc815\ub2f5\uc744 \uac00\uc9c0\uace0 \ubaa8\ub378\uc758 \uac12\uc744 \uc218\uc815\ud55c\ub2e4. \uc989 \uc870\uac74\uc5d0 \ub300\ud55c \uc815\ub2f5\uc744 \uc544\ub294\uac83\uc774 \uc911\uc694\ud558\ub2e4.","title":"\ud53c\ub4dc\ubc31"},{"location":"etc/seminar/learn_to_learn/#_11","text":"\ub9cc\uc57d \uc6b0\ub9ac\uac00 I are \ub97c \ub354 \ub9ce\uc774 \ubcf4\uac8c \ub418\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c? \uc989 \uc798\ubabb\ub41c \ub2f5\uc774 \ub41c\ub2e4. \uc989 \uc815\ud655\ud55c \ud53c\ub4dc\ubc31\uc740 \uc911\uc694\ud558\ub2e4.","title":"\uc798\ubabb\ub41c \ud53c\ub4dc\ubc31"},{"location":"etc/seminar/learn_to_learn/#_12","text":"\ubaa8\ub378\uc758 \ucd5c\uc801 \uac12\uc740 \uc804\ud600 \ubcc0\uacbd\ub418\uc9c0 \uc54a\ub294\ub2e4. \uc989 \uc2dc\uac04 \ub0ad\ube44\ub2e4.","title":"\ub9cc\uc57d \ud53c\ub4dc\ubc31\uc774 \ub2a6\uc73c\uba74 \uc624\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c?"},{"location":"etc/seminar/learn_to_learn/#_13","text":"\uc6b0\ub9ac\ub294 \ubaa8\ub378\uc758 \uc22b\uc790\ub97c \uac00\uac10 \uc2dc\ud0a8\ub2e4. \ub9cc\uc57d \ubaa8\ub378 \uc790\uccb4\uac00 \uc5c6\ub2e4\uba74 $\\infty$ \uc5d0 \uc5b4\ub5bb\uac12\uc744 \ub354\ud574\ub3c4 \uc798 \ubcc0\ud558\uc9c0 \uc54a\ub294\ub2e4. \uc720\ub2db \uc2dc\uac04\uc548\uc5d0 \ub9ce\uc740 \uc9c0\uc2dd\uc744 \uc2b5\ub4dd\ud558\uace0 \uc2f6\ub2e4.","title":"\ub9cc\uc57d \ucd08\uae30\uac12\uc774 \uc5c6\uc73c\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c?"},{"location":"etc/vi/etc/","text":"Tips Markdown with Mathjax syntax bug With mermaid function! MathAndLiquid() \"\" Define certain regions \" Block math. Look for \"$$[anything]$$\" \" syn region math start=/\\$\\$/ end=/\\$\\$/ syn region math start=/\\\\\\\\/ end=/\\\\\\\\/ \" inline math. Look for \"$[not $][anything]$\" syn match math_block '\\$[^$].\\{-}\\$' \" Liquid single line. Look for \"{%[anything]%}\" syn match liquid '{%.*%}' \" Liquid multiline. Look for \"{%[anything]%}[anything]{%[anything]%}\" syn region highlight_block start='{% highlight .*%}' end='{%.*%}' \" Fenced code blocks, used in GitHub Flavored Markdown (GFM) syn region highlight_block start='```' end='```' \"\" Actually highlight those regions. hi link math Statement hi link liquid Statement hi link highlight_block Function hi link math_block Function \"\"mermaid syn region mermaid start=/<div class=\\\"mermaid/ end=/<\\/div>/ hi link mermaid Function endfunction \" Call everytime we open a Markdown file autocmd BufRead,BufNewFile,BufEnter *.md,*.markdown call MathAndLiquid() \" https://stsievert.com/blog/2016/01/06/vim-jekyll-mathjax/","title":"Tips"},{"location":"etc/vi/etc/#tips","text":"","title":"Tips"},{"location":"etc/vi/etc/#markdown-with-mathjax-syntax-bug","text":"With mermaid function! MathAndLiquid() \"\" Define certain regions \" Block math. Look for \"$$[anything]$$\" \" syn region math start=/\\$\\$/ end=/\\$\\$/ syn region math start=/\\\\\\\\/ end=/\\\\\\\\/ \" inline math. Look for \"$[not $][anything]$\" syn match math_block '\\$[^$].\\{-}\\$' \" Liquid single line. Look for \"{%[anything]%}\" syn match liquid '{%.*%}' \" Liquid multiline. Look for \"{%[anything]%}[anything]{%[anything]%}\" syn region highlight_block start='{% highlight .*%}' end='{%.*%}' \" Fenced code blocks, used in GitHub Flavored Markdown (GFM) syn region highlight_block start='```' end='```' \"\" Actually highlight those regions. hi link math Statement hi link liquid Statement hi link highlight_block Function hi link math_block Function \"\"mermaid syn region mermaid start=/<div class=\\\"mermaid/ end=/<\\/div>/ hi link mermaid Function endfunction \" Call everytime we open a Markdown file autocmd BufRead,BufNewFile,BufEnter *.md,*.markdown call MathAndLiquid() \" https://stsievert.com/blog/2016/01/06/vim-jekyll-mathjax/","title":"Markdown with Mathjax syntax bug"},{"location":"etc/vi/multi_lang/","text":"Multi language BackGround vim \uc5d0\uc11c \ud55c\uae00 \ubb38\uc11c\ub97c \uc791\uc131\ud558\ub824\uace0 \ud558\uba74 \uc5c4\uccad\ub098\uac8c \ud798\ub4e4\ub2e4. visual mode, command \ub4f1\uc5d0\uc11c \ud55c\uae00\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. mac os vim 8 * iterm2 Goal \uc778\uc124\ud2b8 \ubaa8\ub450\ub97c \ubc97\uc5b4 \ub0a0\ub54c \uc790\ub3d9\uc73c\ub85c \uc601\ubb38\uc73c\ub85c \ubcc0\uacbd\ub418\uac8c \ud574\ubcf4\uc790. \ucee4\ub9e8\ub4dc \ud0a4\ubcf4\ub4dc \ubcc0\ud658 \ud234 \uc124\uce58 https://github.com/vovkasm/input-source-switcher git clone https://github.com/vovkasm/input-source-switcher.git cd input-source-switcher mkdir build && cd build cmake .. make make install issw //\ub85c \ud655\uc778 Pluging \uc124\uce58 https://github.com/lyokha/vim-xkbswitch * \uc800\ub294 \ubc88\ub4e4\uc744 \uad00\ub9ac \ud234\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. //.vimrc Plugin 'lyokha/vim-xkbswitch' :PluginInstall let g:XkbSwitchEnabled = 1 let g:XkbSwitchLib = '/usr/local/lib/libInputSourceSwitcher.dylib' ESC \ub300\uc2e0 Ctrl+c \ub97c \uc4f0\ub294 \uc720\uc800\ub97c \uc704\ud55c \ud301 .vimrc \uc5d0 \uc544\ub798 \uc124\uc815 \ucd94\uac00. ino <C-C> <Esc>","title":"Multi language"},{"location":"etc/vi/multi_lang/#multi-language","text":"","title":"Multi language"},{"location":"etc/vi/multi_lang/#background","text":"vim \uc5d0\uc11c \ud55c\uae00 \ubb38\uc11c\ub97c \uc791\uc131\ud558\ub824\uace0 \ud558\uba74 \uc5c4\uccad\ub098\uac8c \ud798\ub4e4\ub2e4. visual mode, command \ub4f1\uc5d0\uc11c \ud55c\uae00\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc774\ub2e4. mac os vim 8 * iterm2","title":"BackGround"},{"location":"etc/vi/multi_lang/#goal","text":"\uc778\uc124\ud2b8 \ubaa8\ub450\ub97c \ubc97\uc5b4 \ub0a0\ub54c \uc790\ub3d9\uc73c\ub85c \uc601\ubb38\uc73c\ub85c \ubcc0\uacbd\ub418\uac8c \ud574\ubcf4\uc790.","title":"Goal"},{"location":"etc/vi/multi_lang/#_1","text":"https://github.com/vovkasm/input-source-switcher git clone https://github.com/vovkasm/input-source-switcher.git cd input-source-switcher mkdir build && cd build cmake .. make make install issw //\ub85c \ud655\uc778","title":"\ucee4\ub9e8\ub4dc \ud0a4\ubcf4\ub4dc \ubcc0\ud658 \ud234 \uc124\uce58"},{"location":"etc/vi/multi_lang/#pluging","text":"https://github.com/lyokha/vim-xkbswitch * \uc800\ub294 \ubc88\ub4e4\uc744 \uad00\ub9ac \ud234\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. //.vimrc Plugin 'lyokha/vim-xkbswitch' :PluginInstall let g:XkbSwitchEnabled = 1 let g:XkbSwitchLib = '/usr/local/lib/libInputSourceSwitcher.dylib'","title":"Pluging \uc124\uce58"},{"location":"etc/vi/multi_lang/#esc-ctrlc","text":".vimrc \uc5d0 \uc544\ub798 \uc124\uc815 \ucd94\uac00. ino <C-C> <Esc>","title":"ESC \ub300\uc2e0 Ctrl+c \ub97c \uc4f0\ub294 \uc720\uc800\ub97c \uc704\ud55c \ud301"},{"location":"language/cpp/new_cpp/","text":"New c++11 standard New type c++11 adds long long unsingned long long char16_t char32_t Uniform initialization c++11 extends the applicability of the brace-enclosed list (list initialization) int x = {5}; double y {2.7}; short quar[2] = {1,2} int * ar = new int [2] {1,2}; class Test { private: int aa; int bb; public: Test(int a, int b): aa(a), bb(b) {} } Test t1(1,2); Test t2{1,2}; test t3 = {1,2}; std::initializer_list Can be used as a constructor argument. vector<int> a1(10); // uninitialized vector with 10 elements vector<int> a2{10}; // initializer-ist a2 has 1 elements set to 10 vecotr<int> a3{1,2,3}; // 3 elements set to 1,2,3 You can use an initializer_list argument for regular function as well as for constructor #include <initializer_list> double sum(std::initializer_list<double> li); int main() { double total = sum({1,2,3}) } double sum(std::initializer_list<double> ii) { double tot = 0; for (auto p = il.begin(); p != il.end(); p++) tot += *p; return tot; } Declarations auto c++11 strips the keyword auto of its former meaning as a storage class specifier and puts it to use to implement automatic type deduction, provided that an explicit initializer is given. auto a = 1; // a is type int auto pta = &a; // pta is type int * double b(double, int); ... for(auto p = il.begin(); p != il.end(); p++); decltype Create a variable of the type indicated by an expression. // decltype(x) y; double x; int n; decltype(x*n) q; // q same type as x*n, double decltype(&x) pd; // pd same as &x, double * //useful in template defininitions template<typename T, typename U> void ef(T t, U u) { decltype(T*U) tu; } Trailing Return type To use combination with decltype double f1(double int); auto f2(double, int) -> double; template<typename T, typename U> auto ef(T t, U u): decltype(T*U) { decltype(T*U) tu; } Template Aliases: using = typedef double newDouble; using newDouble = double; template<typename T> using newDoubleArr = std::arrary<T, 12> nullptr The null pointer is a pointer guaranteed not to point to valid data. It's same as pt = 0; Smart Pointers unique_ptr shared_ptr weak_ptr Scoped Enumerations You can use New1::yes and New2::yes. enum Old {yes, no}; enum class New1 {yes, no}; enum struct New2 {yes, no}; Class Changes explicit Conversion Operators Introduce the keyword explicit to suppress automatic conversions invoked by one-argument constructor: class Test { Test(int); explicit Test(double); } Test a, b; a = 5; // implicit converstion, call Test(int) b = 0.5 // not allowed b = Test(0.5) // explicit conversion conversion functions can be treated similarly: class Test { operator int() const; explicit operator double() const; } ... Test a, b; int n = a; // int-to-Test automatic conversion; double x= b // not allowrd x = double(b) // explicit convesrion, allowd Member In-Class Initialization class Test { int aval = 1; int bval = 2; int cval = 3; public: Test() {} Test(int c): cval(c) {} Test(int a, int b, int c): aval(a), bval(b), cval(c) {} } Template and STL Changes Range-based for Loop Use range-based for loop, such as the STL containers, that have begin() and end() methods identifying range. double prices[3] = {1, 2, 3} for (auto x: prices) cout << x << endl; // Modify elements for (auto & x: prices) x = x + 1; New STL Containtes forward_list : single linked list. unorderd_map, set, multimap, multset. arrary: Can't change the size but it have the begin() and end. std::arrary<int, 3> ar; New STL Methods AngleBrackets std::vector<std::list<int> > // >> not ok befor c++11 std::vector<std::list<int>> // ok in c++11 Reference declaration Declares a named variable a s a reference, that is, an alias to already-existing object or function. - & (attr) declarator: Lvalue reference declarator: the declaration S& D; declares D as an lvalue reference to the type determined by decl-specifier-seq S - && (attr) declarator: Rvalue reference declarator: the declaration S&& D: declares D as an rvalue reference to the type determined by decl-specifier-seq S. From C++ Primer Plus (6th Edition)","title":"New c++11 standard"},{"location":"language/cpp/new_cpp/#new-c11-standard","text":"","title":"New c++11 standard"},{"location":"language/cpp/new_cpp/#new-type","text":"c++11 adds long long unsingned long long char16_t char32_t","title":"New type"},{"location":"language/cpp/new_cpp/#uniform-initialization","text":"c++11 extends the applicability of the brace-enclosed list (list initialization) int x = {5}; double y {2.7}; short quar[2] = {1,2} int * ar = new int [2] {1,2}; class Test { private: int aa; int bb; public: Test(int a, int b): aa(a), bb(b) {} } Test t1(1,2); Test t2{1,2}; test t3 = {1,2};","title":"Uniform initialization"},{"location":"language/cpp/new_cpp/#stdinitializer_list","text":"Can be used as a constructor argument. vector<int> a1(10); // uninitialized vector with 10 elements vector<int> a2{10}; // initializer-ist a2 has 1 elements set to 10 vecotr<int> a3{1,2,3}; // 3 elements set to 1,2,3 You can use an initializer_list argument for regular function as well as for constructor #include <initializer_list> double sum(std::initializer_list<double> li); int main() { double total = sum({1,2,3}) } double sum(std::initializer_list<double> ii) { double tot = 0; for (auto p = il.begin(); p != il.end(); p++) tot += *p; return tot; }","title":"std::initializer_list"},{"location":"language/cpp/new_cpp/#declarations","text":"","title":"Declarations"},{"location":"language/cpp/new_cpp/#auto","text":"c++11 strips the keyword auto of its former meaning as a storage class specifier and puts it to use to implement automatic type deduction, provided that an explicit initializer is given. auto a = 1; // a is type int auto pta = &a; // pta is type int * double b(double, int); ... for(auto p = il.begin(); p != il.end(); p++);","title":"auto"},{"location":"language/cpp/new_cpp/#decltype","text":"Create a variable of the type indicated by an expression. // decltype(x) y; double x; int n; decltype(x*n) q; // q same type as x*n, double decltype(&x) pd; // pd same as &x, double * //useful in template defininitions template<typename T, typename U> void ef(T t, U u) { decltype(T*U) tu; }","title":"decltype"},{"location":"language/cpp/new_cpp/#trailing-return-type","text":"To use combination with decltype double f1(double int); auto f2(double, int) -> double; template<typename T, typename U> auto ef(T t, U u): decltype(T*U) { decltype(T*U) tu; }","title":"Trailing Return type"},{"location":"language/cpp/new_cpp/#template-aliases-using","text":"typedef double newDouble; using newDouble = double; template<typename T> using newDoubleArr = std::arrary<T, 12>","title":"Template Aliases: using ="},{"location":"language/cpp/new_cpp/#nullptr","text":"The null pointer is a pointer guaranteed not to point to valid data. It's same as pt = 0;","title":"nullptr"},{"location":"language/cpp/new_cpp/#smart-pointers","text":"unique_ptr shared_ptr weak_ptr","title":"Smart Pointers"},{"location":"language/cpp/new_cpp/#scoped-enumerations","text":"You can use New1::yes and New2::yes. enum Old {yes, no}; enum class New1 {yes, no}; enum struct New2 {yes, no};","title":"Scoped Enumerations"},{"location":"language/cpp/new_cpp/#class-changes","text":"","title":"Class Changes"},{"location":"language/cpp/new_cpp/#explicit-conversion-operators","text":"Introduce the keyword explicit to suppress automatic conversions invoked by one-argument constructor: class Test { Test(int); explicit Test(double); } Test a, b; a = 5; // implicit converstion, call Test(int) b = 0.5 // not allowed b = Test(0.5) // explicit conversion conversion functions can be treated similarly: class Test { operator int() const; explicit operator double() const; } ... Test a, b; int n = a; // int-to-Test automatic conversion; double x= b // not allowrd x = double(b) // explicit convesrion, allowd","title":"explicit Conversion Operators"},{"location":"language/cpp/new_cpp/#member-in-class-initialization","text":"class Test { int aval = 1; int bval = 2; int cval = 3; public: Test() {} Test(int c): cval(c) {} Test(int a, int b, int c): aval(a), bval(b), cval(c) {} }","title":"Member In-Class Initialization"},{"location":"language/cpp/new_cpp/#template-and-stl-changes","text":"","title":"Template and STL Changes"},{"location":"language/cpp/new_cpp/#range-based-for-loop","text":"Use range-based for loop, such as the STL containers, that have begin() and end() methods identifying range. double prices[3] = {1, 2, 3} for (auto x: prices) cout << x << endl; // Modify elements for (auto & x: prices) x = x + 1;","title":"Range-based for Loop"},{"location":"language/cpp/new_cpp/#new-stl-containtes","text":"forward_list : single linked list. unorderd_map, set, multimap, multset. arrary: Can't change the size but it have the begin() and end. std::arrary<int, 3> ar;","title":"New STL Containtes"},{"location":"language/cpp/new_cpp/#new-stl-methods","text":"","title":"New STL Methods"},{"location":"language/cpp/new_cpp/#anglebrackets","text":"std::vector<std::list<int> > // >> not ok befor c++11 std::vector<std::list<int>> // ok in c++11","title":"AngleBrackets"},{"location":"language/cpp/new_cpp/#reference-declaration","text":"Declares a named variable a s a reference, that is, an alias to already-existing object or function. - & (attr) declarator: Lvalue reference declarator: the declaration S& D; declares D as an lvalue reference to the type determined by decl-specifier-seq S - && (attr) declarator: Rvalue reference declarator: the declaration S&& D: declares D as an rvalue reference to the type determined by decl-specifier-seq S.","title":"Reference declaration"},{"location":"language/cpp/new_cpp/#from","text":"C++ Primer Plus (6th Edition)","title":"From"},{"location":"mkdocs/usage/","text":"HowTo Add javascrtip Mathjax.js Enable Mathjax.js add below configuration at mkdocs extra_javascript: - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML Change math syntax from \\\\( ... \\\\) to \\$ ... \\$ window.MathJax = { tex2jax: { inlineMath: [[\"$\",\"$\"]], displayMath: [[\"$$\", \"$$\"]] }, TeX: { TagSide: \"right\", TagIndent: \".8em\", MultLineWidth: \"85%\", unicode: { fonts: \"STIXGeneral,'Arial Unicode MS'\" } }, CommonHTML: { scale: 90 }, showProcessingMessages: false, messageStyle: \"none\" }; Deploy cd home mkdocs build cd site git add . git commit -m git push open https://resoliwan.github.io","title":"HowTo"},{"location":"mkdocs/usage/#howto","text":"","title":"HowTo"},{"location":"mkdocs/usage/#add-javascrtip","text":"","title":"Add javascrtip"},{"location":"mkdocs/usage/#mathjaxjs","text":"","title":"Mathjax.js"},{"location":"mkdocs/usage/#enable-mathjaxjs","text":"add below configuration at mkdocs extra_javascript: - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML","title":"Enable Mathjax.js"},{"location":"mkdocs/usage/#change-math-syntax-from-9292-9292-to","text":"window.MathJax = { tex2jax: { inlineMath: [[\"$\",\"$\"]], displayMath: [[\"$$\", \"$$\"]] }, TeX: { TagSide: \"right\", TagIndent: \".8em\", MultLineWidth: \"85%\", unicode: { fonts: \"STIXGeneral,'Arial Unicode MS'\" } }, CommonHTML: { scale: 90 }, showProcessingMessages: false, messageStyle: \"none\" };","title":"Change math syntax from \\\\( ... \\\\) to \\$ ... \\$"},{"location":"mkdocs/usage/#deploy","text":"cd home mkdocs build cd site git add . git commit -m git push open https://resoliwan.github.io","title":"Deploy"},{"location":"ml/MNIST/","text":"MNIST Goal Predict category of images. Data X: digit image of 28 * 28 pixels. 1-d 784 pixel vector. y: the value of image (0~9) label,pixel0,...,pixel783 1 , 0,...,0 Plan Load data make X to (784, m) make y to (10, m) using one hot encoder. run session and check feed Create model define forward model. define optimize model. define loss function. Train data. optimize loss function. Measure performance Model Linear regression Forward Model $f(x) = W \\cdot X + b$ - X: (784, m), W (1, 784), b (1, 1) Loss $ H_{q}(p) = \\sum_{x} q(x) *\\log_{2} \\frac{1}{\\log p(x)} $ - Cross-Entroy: Average length of message from q(x) using code for p(x) Cost $ cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})$ Resource Information theory stanford-tensorflow-tutorials","title":"MNIST"},{"location":"ml/MNIST/#mnist","text":"","title":"MNIST"},{"location":"ml/MNIST/#goal","text":"Predict category of images.","title":"Goal"},{"location":"ml/MNIST/#data","text":"X: digit image of 28 * 28 pixels. 1-d 784 pixel vector. y: the value of image (0~9) label,pixel0,...,pixel783 1 , 0,...,0","title":"Data"},{"location":"ml/MNIST/#plan","text":"Load data make X to (784, m) make y to (10, m) using one hot encoder. run session and check feed Create model define forward model. define optimize model. define loss function. Train data. optimize loss function. Measure performance","title":"Plan"},{"location":"ml/MNIST/#model","text":"","title":"Model"},{"location":"ml/MNIST/#linear-regression","text":"","title":"Linear regression"},{"location":"ml/MNIST/#forward-model","text":"$f(x) = W \\cdot X + b$ - X: (784, m), W (1, 784), b (1, 1)","title":"Forward Model"},{"location":"ml/MNIST/#loss","text":"$ H_{q}(p) = \\sum_{x} q(x) *\\log_{2} \\frac{1}{\\log p(x)} $ - Cross-Entroy: Average length of message from q(x) using code for p(x)","title":"Loss"},{"location":"ml/MNIST/#cost","text":"$ cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})$","title":"Cost"},{"location":"ml/MNIST/#resource","text":"Information theory stanford-tensorflow-tutorials","title":"Resource"},{"location":"ml/huber_loss/","text":"Huber loss Goal Want less sensitive function to the outliers than the square error loss. How to Use square function for small value. Use absolute function for large value. IDEA $ f(a) = \\begin{cases} a^2 & \\text{for }|a| \\leq 1, \\\\ |a| & \\text{ otherwise} \\end{cases} $ Huber loss $ L_{\\delta}(a) = \\begin{cases} \\frac{1}{2}a^2 & \\text{for }|a| \\leq \\delta, \\\\ \\delta (|a| - \\frac{1}{2} \\delta), & \\text{ otherwise} \\end{cases} $ Graph - Huber loss is green ($ \\delta = 1 $) - squared error loss is blue Code import tensorflow as tf import pandas as pd import numpy as np import math def huber_loss(y, y_hat, delta): diff = math.abs(y - y_hat) if diff < delta: return 0.5 * diff**2 else: return delta * diff - 0.5 * delta**2 def huber_loss(y, y_hat, delta=1.0): residual = tf.abs(y - y_hat) def square_f(): return 0.5 * tf.square(residual) def abs_f(): return delta * residual - 0.5 * tf.square(delta) return tf.cond(residual < delta, square_f, abs_f) Tag loss function ml huber loss","title":"Huber loss"},{"location":"ml/huber_loss/#huber-loss","text":"","title":"Huber loss"},{"location":"ml/huber_loss/#goal","text":"Want less sensitive function to the outliers than the square error loss.","title":"Goal"},{"location":"ml/huber_loss/#how-to","text":"Use square function for small value. Use absolute function for large value.","title":"How to"},{"location":"ml/huber_loss/#idea","text":"$ f(a) = \\begin{cases} a^2 & \\text{for }|a| \\leq 1, \\\\ |a| & \\text{ otherwise} \\end{cases} $","title":"IDEA"},{"location":"ml/huber_loss/#huber-loss_1","text":"$ L_{\\delta}(a) = \\begin{cases} \\frac{1}{2}a^2 & \\text{for }|a| \\leq \\delta, \\\\ \\delta (|a| - \\frac{1}{2} \\delta), & \\text{ otherwise} \\end{cases} $","title":"Huber loss"},{"location":"ml/huber_loss/#graph","text":"- Huber loss is green ($ \\delta = 1 $) - squared error loss is blue","title":"Graph"},{"location":"ml/huber_loss/#code","text":"import tensorflow as tf import pandas as pd import numpy as np import math def huber_loss(y, y_hat, delta): diff = math.abs(y - y_hat) if diff < delta: return 0.5 * diff**2 else: return delta * diff - 0.5 * delta**2 def huber_loss(y, y_hat, delta=1.0): residual = tf.abs(y - y_hat) def square_f(): return 0.5 * tf.square(residual) def abs_f(): return delta * residual - 0.5 * tf.square(delta) return tf.cond(residual < delta, square_f, abs_f)","title":"Code"},{"location":"ml/huber_loss/#tag","text":"loss function ml huber loss","title":"Tag"},{"location":"ml/linear_regression/","text":"Linear regression Goal Make linear model to predict y value. Data x: birth_rate y: life_expectancy M: 190 Country Birth_rate Life_expectancy Vietnam 1.822 74.828243902 Vanuatu 3.869 70.819487805 Tonga 3.911 72.150658537 Plan Load data define input and target. Create model define forward model define optimize model define loss function. Train data Optimize loss function. Measure performance. predict data. Get measure cost. Model Linear regression. $f(x) = w * X + b$ $loss = (y - \\hat y)^2$ $cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})$ Code Use Place holder. import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() df.shape[0] input_label = 'Birthrate' target_label = 'Lifeexpectancy' X = tf.placeholder(tf.float32, name='X') y = tf.placeholder(tf.float32, name='y') W = tf.get_variable('w', initializer=tf.constant(0.0)) b = tf.get_variable('b', initializer=tf.constant(0.0)) init_variables = tf.global_variables_initializer() y_hat = tf.multiply(W, X) + b loss = tf.sqrt((y - y_hat)**2) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-2).minimize(loss) with tf.Session() as sess: sess.run(init_variables) writer = tf.summary.FileWriter('./graphs/linear_reg2', sess.graph) for batch in range(100): cost = 0 for i in range(df.shape[0]): _, loss_out = sess.run([optimizer, loss], feed_dict={X: df[input_label][i], y: df[target_label][i]}) cost += loss_out W_out, b_out = sess.run([W, b]) print(W_out, b_out, cost) writer.close() plt.scatter(df[input_label], df[target_label]) x_min = df[input_label].min() x_max = df[input_label].max() plt.plot([x_min, x_max], [W_out * x_min + b_out, W_out * x_max + b_out]) plt.show() Use dataset import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() dataset = tf.data.Dataset.from_tensor_slices((df['Birthrate'], df['Lifeexpectancy'])) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() # with tf.Session() as sess: # sess.run(iterator.initializer) # sess.run(iterator.get_next()) W = tf.get_variable('weights', initializer=tf.constant(0.0, dtype=tf.float64)) b = tf.get_variable('bias', initializer=tf.constant(0.0, dtype=tf.float64)) y_hat = W * X + b loss = tf.square(y - y_hat) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-3).minimize(loss) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) for epoch in range(100): sess.run(iterator.initializer) cost = 0 try: while True: _, out_loss = sess.run([optimizer, loss]) cost += out_loss except: pass out_W, out_b = sess.run([W, b]) print('epoch %d out_W %f out_b %f cost %f' % (epoch, out_W, out_b, cost)) Resource stanford-tensorflow-tutorials","title":"Linear regression"},{"location":"ml/linear_regression/#linear-regression","text":"","title":"Linear regression"},{"location":"ml/linear_regression/#goal","text":"Make linear model to predict y value.","title":"Goal"},{"location":"ml/linear_regression/#data","text":"x: birth_rate y: life_expectancy M: 190 Country Birth_rate Life_expectancy Vietnam 1.822 74.828243902 Vanuatu 3.869 70.819487805 Tonga 3.911 72.150658537","title":"Data"},{"location":"ml/linear_regression/#plan","text":"Load data define input and target. Create model define forward model define optimize model define loss function. Train data Optimize loss function. Measure performance. predict data. Get measure cost.","title":"Plan"},{"location":"ml/linear_regression/#model","text":"Linear regression. $f(x) = w * X + b$ $loss = (y - \\hat y)^2$ $cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})$","title":"Model"},{"location":"ml/linear_regression/#code","text":"","title":"Code"},{"location":"ml/linear_regression/#use-place-holder","text":"import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() df.shape[0] input_label = 'Birthrate' target_label = 'Lifeexpectancy' X = tf.placeholder(tf.float32, name='X') y = tf.placeholder(tf.float32, name='y') W = tf.get_variable('w', initializer=tf.constant(0.0)) b = tf.get_variable('b', initializer=tf.constant(0.0)) init_variables = tf.global_variables_initializer() y_hat = tf.multiply(W, X) + b loss = tf.sqrt((y - y_hat)**2) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-2).minimize(loss) with tf.Session() as sess: sess.run(init_variables) writer = tf.summary.FileWriter('./graphs/linear_reg2', sess.graph) for batch in range(100): cost = 0 for i in range(df.shape[0]): _, loss_out = sess.run([optimizer, loss], feed_dict={X: df[input_label][i], y: df[target_label][i]}) cost += loss_out W_out, b_out = sess.run([W, b]) print(W_out, b_out, cost) writer.close() plt.scatter(df[input_label], df[target_label]) x_min = df[input_label].min() x_max = df[input_label].max() plt.plot([x_min, x_max], [W_out * x_min + b_out, W_out * x_max + b_out]) plt.show()","title":"Use Place holder."},{"location":"ml/linear_regression/#use-dataset","text":"import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() dataset = tf.data.Dataset.from_tensor_slices((df['Birthrate'], df['Lifeexpectancy'])) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() # with tf.Session() as sess: # sess.run(iterator.initializer) # sess.run(iterator.get_next()) W = tf.get_variable('weights', initializer=tf.constant(0.0, dtype=tf.float64)) b = tf.get_variable('bias', initializer=tf.constant(0.0, dtype=tf.float64)) y_hat = W * X + b loss = tf.square(y - y_hat) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-3).minimize(loss) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) for epoch in range(100): sess.run(iterator.initializer) cost = 0 try: while True: _, out_loss = sess.run([optimizer, loss]) cost += out_loss except: pass out_W, out_b = sess.run([W, b]) print('epoch %d out_W %f out_b %f cost %f' % (epoch, out_W, out_b, cost))","title":"Use dataset"},{"location":"ml/linear_regression/#resource","text":"stanford-tensorflow-tutorials","title":"Resource"},{"location":"ml/softmax/","text":"Softmax Goals Input \uac12\ub4e4\uc744 \ub2e4 \ud569\uce58\uba74 1\uc774 \ub418\ub294 \ud655\ub960\uac12\uc73c\ub85c \ubcc0\ud658\ud574 \uc8fc\uace0 \uc2f6\ub2e4. \uadf8 \uc774\uc57c\uae30\ub294 \uc5b4\ub5a4 \uac12\uc774\ub358 0 \uacfc 1 \uc0ac\uc774\uc758 \uac12\uc744 \ub9ac\ud134\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uace0 \uc2f6\ub2e4. $\\sigma: \\mathbb {R} ^{K}\\to (0,1)^{K} $ Idea \uc608\ub97c\ub4e4\uc5b4 input \uac12\uc774 [1,2,3] \uc77c \uacbd\uc6b0 \uacb0\uacfc\uc758 \ucd1d\ud569\uc774 1\uc774 \ub418\uac8c \ud574\uc904\ub824\uba74 input\uc744 \ub2e4 \ub354\ud55c\uac12 6 = 1 + 2 + 3\uc73c\ub85c \ubaa8\ub4e0 \uc778\ud48b\uac12\uc744 \ub098\ub204\uc5b4 \uc8fc\uba74 \ub41c\ub2e4. $\\sigma([1,2,3]) \\to [\\frac{1}{6},\\frac{2}{6},\\frac{3}{6}] \\approx [0.16, 0.33, 0.5] \\approx 1 $ \uc704\uc758 \uc2dd\uc744 \uc815\ub9ac\ud558\uba74 \uc544\ub798\uc758 \uc2dd\uc774 \ub41c\ub2e4. $\\sigma(\\mathbf{z_{j}}) = {\\frac {z_{j}}{\\sum_{k=1}^{K}z_{k}}}$ \uc704\uc758 \ud568\uc218\uc758 \uc0c1\uc218 z\ub97c \uc9c0\uc218\ub85c \ubc14\uafd4\uc8fc\uc790. $z_j \\to e^{z_j} \\approx 2.71^{z_j}$ $\\sigma(\\mathbf{z_{j}}) = {\\frac{e^{z_{j}}}{\\sum_{k=1}^{K}e^{z_{k}}}} $ \uadf8\ub807\ub2e4 \uc704\uc758 \uc2dd\uc774 softmax \uc774\uba70 \uc6b0\ub9ac\uc758 \uc608\uc81c\ub97c \uacc4\uc0b0\ud558\uba74 $\\sigma([1,2,3]) \\to [\\frac{2.7}{30.2},\\frac{7.3}{30.2},\\frac{20.1}{30.2}] \\approx [0.09, 0.24, 0.66] \\approx 1 $ Code import numpy as np x = [1,2,3] def softmax(x): np.exp(x) / np.sum(np.exp(x)) Tag softmax","title":"Softmax"},{"location":"ml/softmax/#softmax","text":"","title":"Softmax"},{"location":"ml/softmax/#goals","text":"Input \uac12\ub4e4\uc744 \ub2e4 \ud569\uce58\uba74 1\uc774 \ub418\ub294 \ud655\ub960\uac12\uc73c\ub85c \ubcc0\ud658\ud574 \uc8fc\uace0 \uc2f6\ub2e4. \uadf8 \uc774\uc57c\uae30\ub294 \uc5b4\ub5a4 \uac12\uc774\ub358 0 \uacfc 1 \uc0ac\uc774\uc758 \uac12\uc744 \ub9ac\ud134\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uace0 \uc2f6\ub2e4. $\\sigma: \\mathbb {R} ^{K}\\to (0,1)^{K} $","title":"Goals"},{"location":"ml/softmax/#idea","text":"\uc608\ub97c\ub4e4\uc5b4 input \uac12\uc774 [1,2,3] \uc77c \uacbd\uc6b0 \uacb0\uacfc\uc758 \ucd1d\ud569\uc774 1\uc774 \ub418\uac8c \ud574\uc904\ub824\uba74 input\uc744 \ub2e4 \ub354\ud55c\uac12 6 = 1 + 2 + 3\uc73c\ub85c \ubaa8\ub4e0 \uc778\ud48b\uac12\uc744 \ub098\ub204\uc5b4 \uc8fc\uba74 \ub41c\ub2e4. $\\sigma([1,2,3]) \\to [\\frac{1}{6},\\frac{2}{6},\\frac{3}{6}] \\approx [0.16, 0.33, 0.5] \\approx 1 $ \uc704\uc758 \uc2dd\uc744 \uc815\ub9ac\ud558\uba74 \uc544\ub798\uc758 \uc2dd\uc774 \ub41c\ub2e4. $\\sigma(\\mathbf{z_{j}}) = {\\frac {z_{j}}{\\sum_{k=1}^{K}z_{k}}}$ \uc704\uc758 \ud568\uc218\uc758 \uc0c1\uc218 z\ub97c \uc9c0\uc218\ub85c \ubc14\uafd4\uc8fc\uc790. $z_j \\to e^{z_j} \\approx 2.71^{z_j}$ $\\sigma(\\mathbf{z_{j}}) = {\\frac{e^{z_{j}}}{\\sum_{k=1}^{K}e^{z_{k}}}} $ \uadf8\ub807\ub2e4 \uc704\uc758 \uc2dd\uc774 softmax \uc774\uba70 \uc6b0\ub9ac\uc758 \uc608\uc81c\ub97c \uacc4\uc0b0\ud558\uba74 $\\sigma([1,2,3]) \\to [\\frac{2.7}{30.2},\\frac{7.3}{30.2},\\frac{20.1}{30.2}] \\approx [0.09, 0.24, 0.66] \\approx 1 $","title":"Idea"},{"location":"ml/softmax/#code","text":"import numpy as np x = [1,2,3] def softmax(x): np.exp(x) / np.sum(np.exp(x))","title":"Code"},{"location":"ml/softmax/#tag","text":"softmax","title":"Tag"},{"location":"ml/tensorflow_dataset/","text":"tenserflow data Goal Provide data abstraction. tf.Data.Dataset Represent sequence of elements. Creating from source.(tf.Tensor) Creating from tf.dataset using Transformation. tf.data.Iterator Provide main way to extract data from Dataset Sample data l,d0,d1,d2,d3,d4 0,1,2,3,4 1,11,12,13,14 2,21,22,23,24 import pandas as pd import tensorflow as tf import numpy as np df = pd.read_csv('./data/test.csv') df.describe() dm = df.as_matrix() y = dm[:, 0] x = dm[:, 1:] max = np.max(dm[:, 0]) + 1 onehot_y = np.eye(max)[dm[:, 0]] dataset = tf.data.Dataset.from_tensor_slices((x, onehot_y)) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() with tf.Session() as sess: for e in range(3): sess.run(iterator.initializer) try: while True: X_out, y_out = sess.run([X, y]) print('X_out', X_out) print('y_out', y_out) except tf.errors.OutOfRangeError: print('OutOfRangeError') pass Tag tensorflow dataset iterator","title":"tenserflow data"},{"location":"ml/tensorflow_dataset/#tenserflow-data","text":"","title":"tenserflow data"},{"location":"ml/tensorflow_dataset/#goal","text":"Provide data abstraction. tf.Data.Dataset Represent sequence of elements. Creating from source.(tf.Tensor) Creating from tf.dataset using Transformation. tf.data.Iterator Provide main way to extract data from Dataset","title":"Goal"},{"location":"ml/tensorflow_dataset/#sample-data","text":"l,d0,d1,d2,d3,d4 0,1,2,3,4 1,11,12,13,14 2,21,22,23,24 import pandas as pd import tensorflow as tf import numpy as np df = pd.read_csv('./data/test.csv') df.describe() dm = df.as_matrix() y = dm[:, 0] x = dm[:, 1:] max = np.max(dm[:, 0]) + 1 onehot_y = np.eye(max)[dm[:, 0]] dataset = tf.data.Dataset.from_tensor_slices((x, onehot_y)) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() with tf.Session() as sess: for e in range(3): sess.run(iterator.initializer) try: while True: X_out, y_out = sess.run([X, y]) print('X_out', X_out) print('y_out', y_out) except tf.errors.OutOfRangeError: print('OutOfRangeError') pass","title":"Sample data"},{"location":"ml/tensorflow_dataset/#tag","text":"tensorflow dataset iterator","title":"Tag"}]}