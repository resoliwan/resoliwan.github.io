{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"README.md I am excited by constantly learning of many things (Computer Science, Math, life, algorithms) Software Engineer I make common solution for game (Library for games). I make MSA server framework for massive online game. I applied data analysis to balance game. How to work Set the goal. Abstract problems. Break down to sub problems. Do same thing until the remaining sub-problem becomes trivial to solve. Machine Learning & Math I\u2019ve been taking ML & Math courses from MOOC 5 years ago. I have 7 machine learning certification from Coursera. I study reinforcement learning. I love Linear algebra, Partial differential equation, Probability. I am I love ideas that make invisible visible. I love a shift from doing to understanding. I am a father of world best cute girl and boy. I have sense of humour. Skills Typescript, Java, Cpp, Python, Javascript Spring, Node, Redis, Mongo, RDB(MYSQL) Docker, AWS, Android, Vim UML, TDD, ML More I love programming and enjoy it. I like vim. I use Pomodoro as a time management method so sometimes I respond after 25 mins later. Linkedin Profile Email: resoliwan@gmail.com","title":"README.md"},{"location":"#readmemd","text":"I am excited by constantly learning of many things (Computer Science, Math, life, algorithms)","title":"README.md"},{"location":"#software-engineer","text":"I make common solution for game (Library for games). I make MSA server framework for massive online game. I applied data analysis to balance game.","title":"Software Engineer"},{"location":"#how-to-work","text":"Set the goal. Abstract problems. Break down to sub problems. Do same thing until the remaining sub-problem becomes trivial to solve.","title":"How to work"},{"location":"#machine-learning-math","text":"I\u2019ve been taking ML & Math courses from MOOC 5 years ago. I have 7 machine learning certification from Coursera. I study reinforcement learning. I love Linear algebra, Partial differential equation, Probability.","title":"Machine Learning &amp; Math"},{"location":"#i-am","text":"I love ideas that make invisible visible. I love a shift from doing to understanding. I am a father of world best cute girl and boy. I have sense of humour.","title":"I am"},{"location":"#skills","text":"Typescript, Java, Cpp, Python, Javascript Spring, Node, Redis, Mongo, RDB(MYSQL) Docker, AWS, Android, Vim UML, TDD, ML","title":"Skills"},{"location":"#more","text":"I love programming and enjoy it. I like vim. I use Pomodoro as a time management method so sometimes I respond after 25 mins later. Linkedin Profile Email: resoliwan@gmail.com","title":"More"},{"location":"algorithm/en/1_introduction/","text":"Introduction 1. The Role of Algorithm in Computing. What are algorithm? An algorithm is any well-defined procedure that takes values as input and produces some value as output. like function. The statement of problem specifies the desired input and output relationship. The algorithm is procedure for archieving input/output relationship. Ex. Sorting problem Input : A sequence of n elements \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : The permutation(reordering) \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) of the input sequence such that satisfies \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\). Why is the study algorithms worthwhile? To learn techniques of algorithm design and analysis. 2. Getting Started From https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"Introduction"},{"location":"algorithm/en/1_introduction/#introduction","text":"","title":"Introduction"},{"location":"algorithm/en/1_introduction/#1-the-role-of-algorithm-in-computing","text":"What are algorithm? An algorithm is any well-defined procedure that takes values as input and produces some value as output. like function. The statement of problem specifies the desired input and output relationship. The algorithm is procedure for archieving input/output relationship. Ex. Sorting problem Input : A sequence of n elements \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : The permutation(reordering) \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) of the input sequence such that satisfies \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\). Why is the study algorithms worthwhile? To learn techniques of algorithm design and analysis.","title":"1. The Role of Algorithm in Computing."},{"location":"algorithm/en/1_introduction/#2-getting-started","text":"","title":"2. Getting Started"},{"location":"algorithm/en/1_introduction/#from","text":"https://mitpress.mit.edu/books/introduction-algorithms-third-edition","title":"From"},{"location":"algorithm/en/2_getting_started/","text":"Check list for learning algorithm Idea. Pseudocode. Argue that it is correctly works. Analyze its running time. Problem Input : A sequence of n elements \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : The permutation(reordering) \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) of the input sequence such that satisfies \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\). Insertion sort Idea Idea: incremental approch. increment sorted array. insert current item into the sorted arrary A[1..j - 1] HowTo: Start from sorted length 1 array. Until conditions meet - i > 0 and A[i] > key Move i to one step back. Decrease i. Insert current item in A[i + 1] Pseduocode Persue clean and concise 1 for j = 2 to A.length 2 key = A[j] 3 // Insert A[j] into the sorted sequence A[1..j - 1] 4 i = j - 1 5 while i > 0 and A[i] > key 6 A[i + 1] = A[i] 7 i = i - 1 8 A[i + 1] = key Tip - Use \"i\" as a important loop variable name. - Use simple condition first when there is logical concanation. - Use left as variable and right as almost constant value when compare two numbers. - Make it simple as possible Argue that it is correctly works I will use loop invariants It keeps from start to terminate I'll claim sub-array is always sorted. initialization, maintain, termination. initialization The sub arrary started with only one element so it's hold maintain It insert one item into the sorted arrary at right position which above","title":"Check list for learning algorithm"},{"location":"algorithm/en/2_getting_started/#check-list-for-learning-algorithm","text":"Idea. Pseudocode. Argue that it is correctly works. Analyze its running time.","title":"Check list for learning algorithm"},{"location":"algorithm/en/2_getting_started/#problem","text":"Input : A sequence of n elements \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : The permutation(reordering) \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) of the input sequence such that satisfies \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\).","title":"Problem"},{"location":"algorithm/en/2_getting_started/#insertion-sort","text":"","title":"Insertion sort"},{"location":"algorithm/en/2_getting_started/#idea","text":"Idea: incremental approch. increment sorted array. insert current item into the sorted arrary A[1..j - 1] HowTo: Start from sorted length 1 array. Until conditions meet - i > 0 and A[i] > key Move i to one step back. Decrease i. Insert current item in A[i + 1]","title":"Idea"},{"location":"algorithm/en/2_getting_started/#pseduocode","text":"Persue clean and concise 1 for j = 2 to A.length 2 key = A[j] 3 // Insert A[j] into the sorted sequence A[1..j - 1] 4 i = j - 1 5 while i > 0 and A[i] > key 6 A[i + 1] = A[i] 7 i = i - 1 8 A[i + 1] = key Tip - Use \"i\" as a important loop variable name. - Use simple condition first when there is logical concanation. - Use left as variable and right as almost constant value when compare two numbers. - Make it simple as possible","title":"Pseduocode"},{"location":"algorithm/en/2_getting_started/#argue-that-it-is-correctly-works","text":"I will use loop invariants It keeps from start to terminate I'll claim sub-array is always sorted. initialization, maintain, termination. initialization The sub arrary started with only one element so it's hold maintain It insert one item into the sorted arrary at right position which above","title":"Argue that it is correctly works"},{"location":"algorithm/kr/1_introduction/","text":"\ub4e4\uc5b4\uac00\uae30 \uc804\uc5d0 1. \uc54c\uace0\ub9ac\uc998\uc758 \uc5ed\ud560 \uc54c\uace0\ub9ac\uc998\uc740 \ubb34\uc5c7\uc778\uac00? \ud568\uc218\uc801 \uad00\uc810 \uc54c\uace0\ub9ac\uc998\uc740 \ud2b9\uc815 \uac12\uc744 \uc778\ud48b\uc73c\ub85c \ubc1b\uc544 \ud2b9\uc815 \uac12\uc744 \uc544\uc6c3\ud48b\uc73c\ub85c \ub3cc\ub824\uc8fc\ub294 \ud568\uc218\ub77c\uace0 \uc0dd\uac01 \ud560 \uc218 \uc788\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \ud574\ub2f9 \ud568\uc218\ub97c \ud589\ud558\ub294\ub370 \ud544\uc694\ud55c \uba85\ub839\uc5b4\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. \uad00\uacc4\uc801 \uad00\uc810 \uc778\ud48b \uac12\uacfc \uc544\uc6c3\ud48b \uac12\uc758 \uad00\uacc4\uac00 \uc815\uc758\ub41c \ubb38\uc81c\ub85c \ubcf4\ub294 \ubc29\ubc95\ub3c4 \uc788\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \uc778\ud48b \uac12\uacfc \uc544\uc6c3\ud48b \uac12\uc758 \uad00\uacc4\ub97c \ub9cc\uc871\uc2dc\ud0a4\uac8c \ud558\ub294 \uc77c\ub828\uc758 \uc808\ucc28\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. Ex. \uc815\ub82c \ubb38\uc81c Input : n \uac1c\uc758 \uc694\uc18c\ub85c \uad6c\uc131\ub41c \uc21c\uc11c\uc5f4 \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\) \uc744 \ub9cc\uc871\ud558\ub294, \uc7ac \uc815\ub82c\ub41c \uc21c\uc11c\uc5f4 \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) . \uc54c\uace0\ub9ac\uc998\uc744 \ud559\uc2b5\ud574\uc57c \ud558\ub294 \uc774\uc720. \ubb38\uc81c\ub97c \ud478\ub294 \ubc29\ubc95 \uc790\uccb4\uc5d0 \ub300\ud55c \uc124\uacc4 \ud328\ud134, \uc131\ub2a5 \uce21\uc815 \uc694\uc18c \ub4f1\uc744 \ud559\uc2b5\ud560 \uc218 \uc788\ub2e4. \ubb38\uc81c\ub97c \ud478\ub294 \uc88b\uc740 \ubc29\ubc95\uc744 \ubc30\uc6b0\uae30 \uc704\ud574\uc11c \ud559\uc2b5\ud55c\ub2e4.","title":"\ub4e4\uc5b4\uac00\uae30 \uc804\uc5d0"},{"location":"algorithm/kr/1_introduction/#_1","text":"","title":"\ub4e4\uc5b4\uac00\uae30 \uc804\uc5d0"},{"location":"algorithm/kr/1_introduction/#1","text":"","title":"1. \uc54c\uace0\ub9ac\uc998\uc758 \uc5ed\ud560"},{"location":"algorithm/kr/1_introduction/#_2","text":"\ud568\uc218\uc801 \uad00\uc810 \uc54c\uace0\ub9ac\uc998\uc740 \ud2b9\uc815 \uac12\uc744 \uc778\ud48b\uc73c\ub85c \ubc1b\uc544 \ud2b9\uc815 \uac12\uc744 \uc544\uc6c3\ud48b\uc73c\ub85c \ub3cc\ub824\uc8fc\ub294 \ud568\uc218\ub77c\uace0 \uc0dd\uac01 \ud560 \uc218 \uc788\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \ud574\ub2f9 \ud568\uc218\ub97c \ud589\ud558\ub294\ub370 \ud544\uc694\ud55c \uba85\ub839\uc5b4\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. \uad00\uacc4\uc801 \uad00\uc810 \uc778\ud48b \uac12\uacfc \uc544\uc6c3\ud48b \uac12\uc758 \uad00\uacc4\uac00 \uc815\uc758\ub41c \ubb38\uc81c\ub85c \ubcf4\ub294 \ubc29\ubc95\ub3c4 \uc788\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \uc778\ud48b \uac12\uacfc \uc544\uc6c3\ud48b \uac12\uc758 \uad00\uacc4\ub97c \ub9cc\uc871\uc2dc\ud0a4\uac8c \ud558\ub294 \uc77c\ub828\uc758 \uc808\ucc28\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4. Ex. \uc815\ub82c \ubb38\uc81c Input : n \uac1c\uc758 \uc694\uc18c\ub85c \uad6c\uc131\ub41c \uc21c\uc11c\uc5f4 \\( A = < a_{1}, a_{2}, ... ,a_{n} > \\). Output : \\( a_{1}^{\\prime} \\le a_{2}^{\\prime} \\le ... \\le a_{n}^{\\prime} \\) \uc744 \ub9cc\uc871\ud558\ub294, \uc7ac \uc815\ub82c\ub41c \uc21c\uc11c\uc5f4 \\( A = < a_{1}^{\\prime},a_{2}^{\\prime},...,a_{n}^{\\prime} > \\) .","title":"\uc54c\uace0\ub9ac\uc998\uc740 \ubb34\uc5c7\uc778\uac00?"},{"location":"algorithm/kr/1_introduction/#_3","text":"\ubb38\uc81c\ub97c \ud478\ub294 \ubc29\ubc95 \uc790\uccb4\uc5d0 \ub300\ud55c \uc124\uacc4 \ud328\ud134, \uc131\ub2a5 \uce21\uc815 \uc694\uc18c \ub4f1\uc744 \ud559\uc2b5\ud560 \uc218 \uc788\ub2e4. \ubb38\uc81c\ub97c \ud478\ub294 \uc88b\uc740 \ubc29\ubc95\uc744 \ubc30\uc6b0\uae30 \uc704\ud574\uc11c \ud559\uc2b5\ud55c\ub2e4.","title":"\uc54c\uace0\ub9ac\uc998\uc744 \ud559\uc2b5\ud574\uc57c \ud558\ub294  \uc774\uc720."},{"location":"android/googleplay/googleplay_billing/","text":"Google Play Billing Let you sell the digital content from inside an Android app. Building Blocks Google Play : An online store where users can download digital products. Google Play Console The interface app developers use to publish apps on Google Play. Google API Console The console for managing backend APIs, such as Google Play Developer API. Android device Any device used to run Android apps. Android app An application intended to run on Android device. Secure backend server A developer provided server used to implement purchase verification or subscription features. The Play Store app The app responsible for managing all operations related to the Google Play Billing. Google Play Billing Library An API that developers use to implement Google Play Billing within an app. Google Play Developer API A REST API used to programmatically perform a number of publishing and app-management tasks. Subscription and In-App purchase API. Publishing API. Real-time developer notifications Server push notifications that let you monitor state changes. In-app product types One-time products The Google Play Console calls them managed products. The Google Play Billing library calls them INAPP. Subscriptions Purchase tokens and order IDs Google Play billing tracks products and transactions using purchase tokens and order IDs. - A purchase token is a string that represents a buyer's entitlement to a product on Google Play. - An order ID is a string that represents a financial transactions on Google Play. For one-time products, every purchase creates a new token and a new order ID. For subscriptions, an initial purchase creates a purchase token and an order ID. For each continuous billing period, the purchase token stays the same and a new order ID is issued. In-app product configuration options configuration options: Title - A short description of the in-app product, such as \"loot box.\" Description - A longer description of the in-app product. Product ID - A unique, human readable ID for your product. also called SKUs (Stock keeping unit) Price / Default Price - The amount user will pay for the app-product. The default price for one=time products reflects the amount the user will be charged for the product. The default price for subscription is the price will be charged after they enter a regular billing cycle. A single app can have multiple in-app products available for purchase, each with different Product ID and price. Unique one-time product configuration options. Promo codes are codes that a user uses to get a one-time product free of charge. Unique subscription product configuration options. Billing period : The frequency at which a user is charged while their subscription is active. weekly, \"1, 3, 6 months\", annual Free trial period : An amount of time during which a user may access a subscription without being billed. Introductory price : The price of the subscription over a certain number of initial, \"introductory\" billing period. Grace period : The amount of time a user's subscription will remain active, giving the user additional time to fix their payment issue. Account hold : The state of a subscription can enter when a user does not update their form of payment during the grace period.","title":"Google Play Billing"},{"location":"android/googleplay/googleplay_billing/#google-play-billing","text":"Let you sell the digital content from inside an Android app.","title":"Google Play Billing"},{"location":"android/googleplay/googleplay_billing/#building-blocks","text":"Google Play : An online store where users can download digital products. Google Play Console The interface app developers use to publish apps on Google Play. Google API Console The console for managing backend APIs, such as Google Play Developer API. Android device Any device used to run Android apps. Android app An application intended to run on Android device. Secure backend server A developer provided server used to implement purchase verification or subscription features. The Play Store app The app responsible for managing all operations related to the Google Play Billing. Google Play Billing Library An API that developers use to implement Google Play Billing within an app. Google Play Developer API A REST API used to programmatically perform a number of publishing and app-management tasks. Subscription and In-App purchase API. Publishing API. Real-time developer notifications Server push notifications that let you monitor state changes.","title":"Building Blocks"},{"location":"android/googleplay/googleplay_billing/#in-app-product-types","text":"One-time products The Google Play Console calls them managed products. The Google Play Billing library calls them INAPP. Subscriptions","title":"In-app product types"},{"location":"android/googleplay/googleplay_billing/#purchase-tokens-and-order-ids","text":"Google Play billing tracks products and transactions using purchase tokens and order IDs. - A purchase token is a string that represents a buyer's entitlement to a product on Google Play. - An order ID is a string that represents a financial transactions on Google Play. For one-time products, every purchase creates a new token and a new order ID. For subscriptions, an initial purchase creates a purchase token and an order ID. For each continuous billing period, the purchase token stays the same and a new order ID is issued.","title":"Purchase tokens and order IDs"},{"location":"android/googleplay/googleplay_billing/#in-app-product-configuration-options","text":"configuration options: Title - A short description of the in-app product, such as \"loot box.\" Description - A longer description of the in-app product. Product ID - A unique, human readable ID for your product. also called SKUs (Stock keeping unit) Price / Default Price - The amount user will pay for the app-product. The default price for one=time products reflects the amount the user will be charged for the product. The default price for subscription is the price will be charged after they enter a regular billing cycle. A single app can have multiple in-app products available for purchase, each with different Product ID and price.","title":"In-app product configuration options"},{"location":"android/googleplay/googleplay_billing/#unique-one-time-product-configuration-options","text":"Promo codes are codes that a user uses to get a one-time product free of charge.","title":"Unique one-time product configuration options."},{"location":"android/googleplay/googleplay_billing/#unique-subscription-product-configuration-options","text":"Billing period : The frequency at which a user is charged while their subscription is active. weekly, \"1, 3, 6 months\", annual Free trial period : An amount of time during which a user may access a subscription without being billed. Introductory price : The price of the subscription over a certain number of initial, \"introductory\" billing period. Grace period : The amount of time a user's subscription will remain active, giving the user additional time to fix their payment issue. Account hold : The state of a subscription can enter when a user does not update their form of payment during the grace period.","title":"Unique subscription product configuration options."},{"location":"android/googleplay/googleplay_billing_library/","text":"Google Play Billing Library About the code snippets TrivialDrive v2 - How to list the available products. - Start a purchase flow. - Record product consumption Steps to add Google Play Billing to an app Update your app's dependencies. Connect to Google Play. Query for in-app product details. Enable the purchase of an in-app product. Query for purchased items. Add one-time product-specific or subscription-specific code. Update your app dependencies dependencies { ... api 'com.android.billingclient:billing:1.2' }","title":"Google Play Billing Library"},{"location":"android/googleplay/googleplay_billing_library/#google-play-billing-library","text":"","title":"Google Play Billing Library"},{"location":"android/googleplay/googleplay_billing_library/#about-the-code-snippets","text":"TrivialDrive v2 - How to list the available products. - Start a purchase flow. - Record product consumption","title":"About the code snippets"},{"location":"android/googleplay/googleplay_billing_library/#steps-to-add-google-play-billing-to-an-app","text":"Update your app's dependencies. Connect to Google Play. Query for in-app product details. Enable the purchase of an in-app product. Query for purchased items. Add one-time product-specific or subscription-specific code.","title":"Steps to add Google Play Billing to an app"},{"location":"android/googleplay/googleplay_billing_library/#update-your-app-dependencies","text":"dependencies { ... api 'com.android.billingclient:billing:1.2' }","title":"Update your app dependencies"},{"location":"android/publish/1_publish_overview/","text":"Publish your app You prepare application for release. You release application to user. Preparing your app for release Configuring your application for release. Building and signing a release version of your application. Testing the release version of your application. Updating application resources for release. Preparing remote servers and services that your application depends on. Releasing your app to users Releasing through an app marketplace Releasing your app on Google Play Google Play is a publishing platform that helps you publicize, sell and distribute your app to users around the world. - Preparing promotional materials. - Configuring options and uploading assets. - Publishing the release version of your applications.","title":"Publish your app"},{"location":"android/publish/1_publish_overview/#publish-your-app","text":"You prepare application for release. You release application to user.","title":"Publish your app"},{"location":"android/publish/1_publish_overview/#preparing-your-app-for-release","text":"Configuring your application for release. Building and signing a release version of your application. Testing the release version of your application. Updating application resources for release. Preparing remote servers and services that your application depends on.","title":"Preparing your app for release"},{"location":"android/publish/1_publish_overview/#releasing-your-app-to-users","text":"","title":"Releasing your app to users"},{"location":"android/publish/1_publish_overview/#releasing-through-an-app-marketplace","text":"","title":"Releasing through an app marketplace"},{"location":"android/publish/1_publish_overview/#releasing-your-app-on-google-play","text":"Google Play is a publishing platform that helps you publicize, sell and distribute your app to users around the world. - Preparing promotional materials. - Configuring options and uploading assets. - Publishing the release version of your applications.","title":"Releasing your app on Google Play"},{"location":"android/publish/2_prepare_for_release/","text":"Prepare for release Introduction Release-ready APK file is signed with your own certificate and it is optimized with the zipalign tool. Gathering materials and resources Cryptographic keys The Android system requires that each installed application be digitally signed with a certificate that is owned by the application's developer (this is, a certificate for which the developer holds the private key). The Android system uses the certificate as a means of identifying the author of an application and establishing trust relationships between applications Application icon End User License Agreement (EULA) Miscellaneous materials Configuring Your Application for release Choose a good package name Turn off logging and debugging Clean up your project directories Review and update your manifest and Gradle build settings Address compatibility issues Update URLs for servers and services Implement licensing (if you are releasing on Google Play) Building Your application for release Preparing external servers and resources Testing your application for release","title":"Prepare for release"},{"location":"android/publish/2_prepare_for_release/#prepare-for-release","text":"","title":"Prepare for release"},{"location":"android/publish/2_prepare_for_release/#introduction","text":"Release-ready APK file is signed with your own certificate and it is optimized with the zipalign tool.","title":"Introduction"},{"location":"android/publish/2_prepare_for_release/#gathering-materials-and-resources","text":"","title":"Gathering materials and resources"},{"location":"android/publish/2_prepare_for_release/#cryptographic-keys","text":"The Android system requires that each installed application be digitally signed with a certificate that is owned by the application's developer (this is, a certificate for which the developer holds the private key). The Android system uses the certificate as a means of identifying the author of an application and establishing trust relationships between applications","title":"Cryptographic keys"},{"location":"android/publish/2_prepare_for_release/#application-icon","text":"","title":"Application icon"},{"location":"android/publish/2_prepare_for_release/#end-user-license-agreement-eula","text":"","title":"End User License Agreement (EULA)"},{"location":"android/publish/2_prepare_for_release/#miscellaneous-materials","text":"","title":"Miscellaneous materials"},{"location":"android/publish/2_prepare_for_release/#configuring-your-application-for-release","text":"Choose a good package name Turn off logging and debugging Clean up your project directories Review and update your manifest and Gradle build settings Address compatibility issues Update URLs for servers and services Implement licensing (if you are releasing on Google Play)","title":"Configuring Your Application for release"},{"location":"android/publish/2_prepare_for_release/#building-your-application-for-release","text":"","title":"Building Your application for release"},{"location":"android/publish/2_prepare_for_release/#preparing-external-servers-and-resources","text":"","title":"Preparing external servers and resources"},{"location":"android/publish/2_prepare_for_release/#testing-your-application-for-release","text":"","title":"Testing your application for release"},{"location":"android/publish/3_version/","text":"Version your app Set application version information versionCode - A positive integer used as an internal version number. versionName - A string used as the version number shown to users. android { defaultConfig { ... versionCode 2 versionName \"1.1\" } productFlavors { demo { ... versionName \"1.1-demo\" } full { ... } } } Specify API level requirements minSdkVersion - The minimum version of the Android platform on which the app will run. targetSdkVersion - Specifies the API level on which the app is designed to run. andorid { defaultConfig { ... minSdkVersion 14 targetSdkVerison 24 } productFlavers { main { ... } afterLollipop { ... minSdkVersion 21 } } }","title":"Version your app"},{"location":"android/publish/3_version/#version-your-app","text":"","title":"Version your app"},{"location":"android/publish/3_version/#set-application-version-information","text":"versionCode - A positive integer used as an internal version number. versionName - A string used as the version number shown to users. android { defaultConfig { ... versionCode 2 versionName \"1.1\" } productFlavors { demo { ... versionName \"1.1-demo\" } full { ... } } }","title":"Set application version information"},{"location":"android/publish/3_version/#specify-api-level-requirements","text":"minSdkVersion - The minimum version of the Android platform on which the app will run. targetSdkVersion - Specifies the API level on which the app is designed to run. andorid { defaultConfig { ... minSdkVersion 14 targetSdkVerison 24 } productFlavers { main { ... } afterLollipop { ... minSdkVersion 21 } } }","title":"Specify API level requirements"},{"location":"etc/books/2018_12_lovethatdog/","text":"Love that dog Feel It was easy and fun. I realized I can cry while reading a book wrote by English. This was my first novel which wrote in English.","title":"Love that dog"},{"location":"etc/books/2018_12_lovethatdog/#love-that-dog","text":"","title":"Love that dog"},{"location":"etc/books/2018_12_lovethatdog/#feel","text":"It was easy and fun. I realized I can cry while reading a book wrote by English. This was my first novel which wrote in English.","title":"Feel"},{"location":"etc/idea/launcher/","text":"Luncher App Goal \uc54c\ud504\ub808\ub4dc\uc640 \uac19\uc740 \uc548\ub4dc\ub85c\uc774\ub4dc \ub7f0\ucc98\ub97c \ub9cc\ub4e4\uc790. Why? \uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc571\uc744 \ucc3e\uc744 \ub54c \uadc0\ucc2e\ub2e4. Functions \ucd08\uc131 \uac80\uc0c9\uc774 \ub41c\ub2e4. \ub7f0\uccd0\ub97c \ub9cc\ub4e4\uace0 \ub0a0\uc790, wifi, \uc704\uce58 \ub4f1\uc744 \uc0ac\uc6a9\ud574 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \uc571\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc0ac\uc6a9\ud574 \ub7f0\ucc98\uc5d0 \ub178\ucd9c\ub418\ub294 \uac83\ub4e4\uc744 \ud559\uc2b5\uc2dc\ud0a8\ub2e4. Formula \\( P(\\text{Prioriry} | \\text{date, wifi, lat, lng}) \\)","title":"Luncher App"},{"location":"etc/idea/launcher/#luncher-app","text":"","title":"Luncher App"},{"location":"etc/idea/launcher/#goal","text":"\uc54c\ud504\ub808\ub4dc\uc640 \uac19\uc740 \uc548\ub4dc\ub85c\uc774\ub4dc \ub7f0\ucc98\ub97c \ub9cc\ub4e4\uc790.","title":"Goal"},{"location":"etc/idea/launcher/#why","text":"\uc548\ub4dc\ub85c\uc774\ub4dc\uc5d0\uc11c \uc571\uc744 \ucc3e\uc744 \ub54c \uadc0\ucc2e\ub2e4.","title":"Why?"},{"location":"etc/idea/launcher/#functions","text":"\ucd08\uc131 \uac80\uc0c9\uc774 \ub41c\ub2e4. \ub7f0\uccd0\ub97c \ub9cc\ub4e4\uace0 \ub0a0\uc790, wifi, \uc704\uce58 \ub4f1\uc744 \uc0ac\uc6a9\ud574 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \uc571\uc744 \ubcf4\uc5ec\uc900\ub2e4. \uba38\uc2e0\ub7ec\ub2dd\uc744 \uc0ac\uc6a9\ud574 \ub7f0\ucc98\uc5d0 \ub178\ucd9c\ub418\ub294 \uac83\ub4e4\uc744 \ud559\uc2b5\uc2dc\ud0a8\ub2e4.","title":"Functions"},{"location":"etc/idea/launcher/#formula","text":"\\( P(\\text{Prioriry} | \\text{date, wifi, lat, lng}) \\)","title":"Formula"},{"location":"mkdocs/usage/","text":"HowTo Add javascrtip Mathjax.js add below configuration at mkdocs extra_javascript: - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML Deploy cd home mkdocs build cd site git add . git commit -m git push open https://resoliwan.github.io","title":"HowTo"},{"location":"mkdocs/usage/#howto","text":"","title":"HowTo"},{"location":"mkdocs/usage/#add-javascrtip","text":"","title":"Add javascrtip"},{"location":"mkdocs/usage/#mathjaxjs","text":"add below configuration at mkdocs extra_javascript: - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML","title":"Mathjax.js"},{"location":"mkdocs/usage/#deploy","text":"cd home mkdocs build cd site git add . git commit -m git push open https://resoliwan.github.io","title":"Deploy"},{"location":"ml/MNIST/","text":"MNIST Goal Predict category of images. Data X: digit image of 28 * 28 pixels. 1-d 784 pixel vector. y: the value of image (0~9) label,pixel0,...,pixel783 1 , 0,...,0 Plan Load data make X to (784, m) make y to (10, m) using one hot encoder. run session and check feed Create model define forward model. define optimize model. define loss function. Train data. optimize loss function. Measure performance Model Linear regression Forward Model \\( f(x) = W \\cdot X + b \\) - X: (784, m), W (1, 784), b (1, 1) Loss \\( H_{q}(p) = \\sum_{x} q(x) *\\log_{2} \\frac{1}{\\log p(x)} \\) - Cross-Entroy: Average length of message from q(x) using code for p(x) Cost \\( cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})\\) Resource Information theory stanford-tensorflow-tutorials","title":"MNIST"},{"location":"ml/MNIST/#mnist","text":"","title":"MNIST"},{"location":"ml/MNIST/#goal","text":"Predict category of images.","title":"Goal"},{"location":"ml/MNIST/#data","text":"X: digit image of 28 * 28 pixels. 1-d 784 pixel vector. y: the value of image (0~9) label,pixel0,...,pixel783 1 , 0,...,0","title":"Data"},{"location":"ml/MNIST/#plan","text":"Load data make X to (784, m) make y to (10, m) using one hot encoder. run session and check feed Create model define forward model. define optimize model. define loss function. Train data. optimize loss function. Measure performance","title":"Plan"},{"location":"ml/MNIST/#model","text":"","title":"Model"},{"location":"ml/MNIST/#linear-regression","text":"","title":"Linear regression"},{"location":"ml/MNIST/#forward-model","text":"\\( f(x) = W \\cdot X + b \\) - X: (784, m), W (1, 784), b (1, 1)","title":"Forward Model"},{"location":"ml/MNIST/#loss","text":"\\( H_{q}(p) = \\sum_{x} q(x) *\\log_{2} \\frac{1}{\\log p(x)} \\) - Cross-Entroy: Average length of message from q(x) using code for p(x)","title":"Loss"},{"location":"ml/MNIST/#cost","text":"\\( cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})\\)","title":"Cost"},{"location":"ml/MNIST/#resource","text":"Information theory stanford-tensorflow-tutorials","title":"Resource"},{"location":"ml/huber_loss/","text":"Huber loss Goal Want less sensitive function to the outliers than the square error loss. How to Use square function for small value. Use absolute function for large value. IDEA \\( f(a) = \\begin{cases} a^2 & \\text{for }|a| \\leq 1, \\\\ |a| & \\text{ otherwise} \\end{cases} \\) Huber loss \\( L_{\\delta}(a) = \\begin{cases} \\frac{1}{2}a^2 & \\text{for }|a| \\leq \\delta, \\\\ \\delta (|a| - \\frac{1}{2} \\delta), & \\text{ otherwise} \\end{cases} \\) Graph - Huber loss is green (\\( \\delta = 1 \\)) - squared error loss is blue Code import tensorflow as tf import pandas as pd import numpy as np import math def huber_loss(y, y_hat, delta): diff = math.abs(y - y_hat) if diff < delta: return 0.5 * diff**2 else: return delta * diff - 0.5 * delta**2 def huber_loss(y, y_hat, delta=1.0): residual = tf.abs(y - y_hat) def square_f(): return 0.5 * tf.square(residual) def abs_f(): return delta * residual - 0.5 * tf.square(delta) return tf.cond(residual < delta, square_f, abs_f) Tag loss function ml huber loss","title":"Huber loss"},{"location":"ml/huber_loss/#huber-loss","text":"","title":"Huber loss"},{"location":"ml/huber_loss/#goal","text":"Want less sensitive function to the outliers than the square error loss.","title":"Goal"},{"location":"ml/huber_loss/#how-to","text":"Use square function for small value. Use absolute function for large value.","title":"How to"},{"location":"ml/huber_loss/#idea","text":"\\( f(a) = \\begin{cases} a^2 & \\text{for }|a| \\leq 1, \\\\ |a| & \\text{ otherwise} \\end{cases} \\)","title":"IDEA"},{"location":"ml/huber_loss/#huber-loss_1","text":"\\( L_{\\delta}(a) = \\begin{cases} \\frac{1}{2}a^2 & \\text{for }|a| \\leq \\delta, \\\\ \\delta (|a| - \\frac{1}{2} \\delta), & \\text{ otherwise} \\end{cases} \\)","title":"Huber loss"},{"location":"ml/huber_loss/#graph","text":"- Huber loss is green (\\( \\delta = 1 \\)) - squared error loss is blue","title":"Graph"},{"location":"ml/huber_loss/#code","text":"import tensorflow as tf import pandas as pd import numpy as np import math def huber_loss(y, y_hat, delta): diff = math.abs(y - y_hat) if diff < delta: return 0.5 * diff**2 else: return delta * diff - 0.5 * delta**2 def huber_loss(y, y_hat, delta=1.0): residual = tf.abs(y - y_hat) def square_f(): return 0.5 * tf.square(residual) def abs_f(): return delta * residual - 0.5 * tf.square(delta) return tf.cond(residual < delta, square_f, abs_f)","title":"Code"},{"location":"ml/huber_loss/#tag","text":"loss function ml huber loss","title":"Tag"},{"location":"ml/linear_regression/","text":"Linear regression Goal Make linear model to predict y value. Data x: birth_rate y: life_expectancy M: 190 Country Birth_rate Life_expectancy Vietnam 1.822 74.828243902 Vanuatu 3.869 70.819487805 Tonga 3.911 72.150658537 Plan Load data define input and target. Create model define forward model define optimize model define loss function. Train data Optimize loss function. Measure performance. predict data. Get measure cost. Model Linear regression. \\( f(x) = w * X + b\\) \\( loss = (y - \\hat y)^2\\) \\( cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})\\) Code Use Place holder. import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() df.shape[0] input_label = 'Birthrate' target_label = 'Lifeexpectancy' X = tf.placeholder(tf.float32, name='X') y = tf.placeholder(tf.float32, name='y') W = tf.get_variable('w', initializer=tf.constant(0.0)) b = tf.get_variable('b', initializer=tf.constant(0.0)) init_variables = tf.global_variables_initializer() y_hat = tf.multiply(W, X) + b loss = tf.sqrt((y - y_hat)**2) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-2).minimize(loss) with tf.Session() as sess: sess.run(init_variables) writer = tf.summary.FileWriter('./graphs/linear_reg2', sess.graph) for batch in range(100): cost = 0 for i in range(df.shape[0]): _, loss_out = sess.run([optimizer, loss], feed_dict={X: df[input_label][i], y: df[target_label][i]}) cost += loss_out W_out, b_out = sess.run([W, b]) print(W_out, b_out, cost) writer.close() plt.scatter(df[input_label], df[target_label]) x_min = df[input_label].min() x_max = df[input_label].max() plt.plot([x_min, x_max], [W_out * x_min + b_out, W_out * x_max + b_out]) plt.show() Use dataset import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() dataset = tf.data.Dataset.from_tensor_slices((df['Birthrate'], df['Lifeexpectancy'])) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() # with tf.Session() as sess: # sess.run(iterator.initializer) # sess.run(iterator.get_next()) W = tf.get_variable('weights', initializer=tf.constant(0.0, dtype=tf.float64)) b = tf.get_variable('bias', initializer=tf.constant(0.0, dtype=tf.float64)) y_hat = W * X + b loss = tf.square(y - y_hat) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-3).minimize(loss) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) for epoch in range(100): sess.run(iterator.initializer) cost = 0 try: while True: _, out_loss = sess.run([optimizer, loss]) cost += out_loss except: pass out_W, out_b = sess.run([W, b]) print('epoch %d out_W %f out_b %f cost %f' % (epoch, out_W, out_b, cost)) Resource stanford-tensorflow-tutorials","title":"Linear regression"},{"location":"ml/linear_regression/#linear-regression","text":"","title":"Linear regression"},{"location":"ml/linear_regression/#goal","text":"Make linear model to predict y value.","title":"Goal"},{"location":"ml/linear_regression/#data","text":"x: birth_rate y: life_expectancy M: 190 Country Birth_rate Life_expectancy Vietnam 1.822 74.828243902 Vanuatu 3.869 70.819487805 Tonga 3.911 72.150658537","title":"Data"},{"location":"ml/linear_regression/#plan","text":"Load data define input and target. Create model define forward model define optimize model define loss function. Train data Optimize loss function. Measure performance. predict data. Get measure cost.","title":"Plan"},{"location":"ml/linear_regression/#model","text":"Linear regression. \\( f(x) = w * X + b\\) \\( loss = (y - \\hat y)^2\\) \\( cost(\\theta) = \\sum_{i=0}^{M}loss(x^{(i)})\\)","title":"Model"},{"location":"ml/linear_regression/#code","text":"","title":"Code"},{"location":"ml/linear_regression/#use-place-holder","text":"import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() df.shape[0] input_label = 'Birthrate' target_label = 'Lifeexpectancy' X = tf.placeholder(tf.float32, name='X') y = tf.placeholder(tf.float32, name='y') W = tf.get_variable('w', initializer=tf.constant(0.0)) b = tf.get_variable('b', initializer=tf.constant(0.0)) init_variables = tf.global_variables_initializer() y_hat = tf.multiply(W, X) + b loss = tf.sqrt((y - y_hat)**2) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-2).minimize(loss) with tf.Session() as sess: sess.run(init_variables) writer = tf.summary.FileWriter('./graphs/linear_reg2', sess.graph) for batch in range(100): cost = 0 for i in range(df.shape[0]): _, loss_out = sess.run([optimizer, loss], feed_dict={X: df[input_label][i], y: df[target_label][i]}) cost += loss_out W_out, b_out = sess.run([W, b]) print(W_out, b_out, cost) writer.close() plt.scatter(df[input_label], df[target_label]) x_min = df[input_label].min() x_max = df[input_label].max() plt.plot([x_min, x_max], [W_out * x_min + b_out, W_out * x_max + b_out]) plt.show()","title":"Use Place holder."},{"location":"ml/linear_regression/#use-dataset","text":"import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt df = pd.read_csv('./examples/data/birth_life_2010.txt', delimiter='\\t') df.describe() dataset = tf.data.Dataset.from_tensor_slices((df['Birthrate'], df['Lifeexpectancy'])) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() # with tf.Session() as sess: # sess.run(iterator.initializer) # sess.run(iterator.get_next()) W = tf.get_variable('weights', initializer=tf.constant(0.0, dtype=tf.float64)) b = tf.get_variable('bias', initializer=tf.constant(0.0, dtype=tf.float64)) y_hat = W * X + b loss = tf.square(y - y_hat) optimizer = tf.train.GradientDescentOptimizer(learning_rate=1e-3).minimize(loss) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) for epoch in range(100): sess.run(iterator.initializer) cost = 0 try: while True: _, out_loss = sess.run([optimizer, loss]) cost += out_loss except: pass out_W, out_b = sess.run([W, b]) print('epoch %d out_W %f out_b %f cost %f' % (epoch, out_W, out_b, cost))","title":"Use dataset"},{"location":"ml/linear_regression/#resource","text":"stanford-tensorflow-tutorials","title":"Resource"},{"location":"ml/softmax/","text":"Softmax Goals Input \uac12\ub4e4\uc744 \ub2e4 \ud569\uce58\uba74 1\uc774 \ub418\ub294 \ud655\ub960\uac12\uc73c\ub85c \ubcc0\ud658\ud574 \uc8fc\uace0 \uc2f6\ub2e4. \uadf8 \uc774\uc57c\uae30\ub294 \uc5b4\ub5a4 \uac12\uc774\ub358 0 \uacfc 1 \uc0ac\uc774\uc758 \uac12\uc744 \ub9ac\ud134\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uace0 \uc2f6\ub2e4. \\( \\sigma: \\mathbb {R} ^{K}\\to (0,1)^{K} \\) Idea \uc608\ub97c\ub4e4\uc5b4 input \uac12\uc774 [1,2,3] \uc77c \uacbd\uc6b0 \uacb0\uacfc\uc758 \ucd1d\ud569\uc774 1\uc774 \ub418\uac8c \ud574\uc904\ub824\uba74 input\uc744 \ub2e4 \ub354\ud55c\uac12 6 = 1 + 2 + 3\uc73c\ub85c \ubaa8\ub4e0 \uc778\ud48b\uac12\uc744 \ub098\ub204\uc5b4 \uc8fc\uba74 \ub41c\ub2e4. \\( \\sigma([1,2,3]) \\to [\\frac{1}{6},\\frac{2}{6},\\frac{3}{6}] \\approx [0.16, 0.33, 0.5] \\approx 1 \\) \uc704\uc758 \uc2dd\uc744 \uc815\ub9ac\ud558\uba74 \uc544\ub798\uc758 \uc2dd\uc774 \ub41c\ub2e4. \\( \\sigma(\\mathbf{z_{j}}) = {\\frac {z_{j}}{\\sum_{k=1}^{K}z_{k}}}\\) \uc704\uc758 \ud568\uc218\uc758 \uc0c1\uc218 z\ub97c \uc9c0\uc218\ub85c \ubc14\uafd4\uc8fc\uc790. \\(z_j \\to e^{z_j} \\approx 2.71^{z_j}\\) \\( \\sigma(\\mathbf{z_{j}}) = {\\frac{e^{z_{j}}}{\\sum_{k=1}^{K}e^{z_{k}}}} \\) \uadf8\ub807\ub2e4 \uc704\uc758 \uc2dd\uc774 softmax \uc774\uba70 \uc6b0\ub9ac\uc758 \uc608\uc81c\ub97c \uacc4\uc0b0\ud558\uba74 \\( \\sigma([1,2,3]) \\to [\\frac{2.7}{30.2},\\frac{7.3}{30.2},\\frac{20.1}{30.2}] \\approx [0.09, 0.24, 0.66] \\approx 1 \\) Code import numpy as np x = [1,2,3] def softmax(x): np.exp(x) / np.sum(np.exp(x)) Tag softmax","title":"Softmax"},{"location":"ml/softmax/#softmax","text":"","title":"Softmax"},{"location":"ml/softmax/#goals","text":"Input \uac12\ub4e4\uc744 \ub2e4 \ud569\uce58\uba74 1\uc774 \ub418\ub294 \ud655\ub960\uac12\uc73c\ub85c \ubcc0\ud658\ud574 \uc8fc\uace0 \uc2f6\ub2e4. \uadf8 \uc774\uc57c\uae30\ub294 \uc5b4\ub5a4 \uac12\uc774\ub358 0 \uacfc 1 \uc0ac\uc774\uc758 \uac12\uc744 \ub9ac\ud134\ud558\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uace0 \uc2f6\ub2e4. \\( \\sigma: \\mathbb {R} ^{K}\\to (0,1)^{K} \\)","title":"Goals"},{"location":"ml/softmax/#idea","text":"\uc608\ub97c\ub4e4\uc5b4 input \uac12\uc774 [1,2,3] \uc77c \uacbd\uc6b0 \uacb0\uacfc\uc758 \ucd1d\ud569\uc774 1\uc774 \ub418\uac8c \ud574\uc904\ub824\uba74 input\uc744 \ub2e4 \ub354\ud55c\uac12 6 = 1 + 2 + 3\uc73c\ub85c \ubaa8\ub4e0 \uc778\ud48b\uac12\uc744 \ub098\ub204\uc5b4 \uc8fc\uba74 \ub41c\ub2e4. \\( \\sigma([1,2,3]) \\to [\\frac{1}{6},\\frac{2}{6},\\frac{3}{6}] \\approx [0.16, 0.33, 0.5] \\approx 1 \\) \uc704\uc758 \uc2dd\uc744 \uc815\ub9ac\ud558\uba74 \uc544\ub798\uc758 \uc2dd\uc774 \ub41c\ub2e4. \\( \\sigma(\\mathbf{z_{j}}) = {\\frac {z_{j}}{\\sum_{k=1}^{K}z_{k}}}\\) \uc704\uc758 \ud568\uc218\uc758 \uc0c1\uc218 z\ub97c \uc9c0\uc218\ub85c \ubc14\uafd4\uc8fc\uc790. \\(z_j \\to e^{z_j} \\approx 2.71^{z_j}\\) \\( \\sigma(\\mathbf{z_{j}}) = {\\frac{e^{z_{j}}}{\\sum_{k=1}^{K}e^{z_{k}}}} \\) \uadf8\ub807\ub2e4 \uc704\uc758 \uc2dd\uc774 softmax \uc774\uba70 \uc6b0\ub9ac\uc758 \uc608\uc81c\ub97c \uacc4\uc0b0\ud558\uba74 \\( \\sigma([1,2,3]) \\to [\\frac{2.7}{30.2},\\frac{7.3}{30.2},\\frac{20.1}{30.2}] \\approx [0.09, 0.24, 0.66] \\approx 1 \\)","title":"Idea"},{"location":"ml/softmax/#code","text":"import numpy as np x = [1,2,3] def softmax(x): np.exp(x) / np.sum(np.exp(x))","title":"Code"},{"location":"ml/softmax/#tag","text":"softmax","title":"Tag"},{"location":"ml/tensorflow_dataset/","text":"tenserflow data Goal Provide data abstraction. tf.Data.Dataset Represent sequence of elements. Creating from source.(tf.Tensor) Creating from tf.dataset using Transformation. tf.data.Iterator Provide main way to extract data from Dataset Sample data l,d0,d1,d2,d3,d4 0,1,2,3,4 1,11,12,13,14 2,21,22,23,24 import pandas as pd import tensorflow as tf import numpy as np df = pd.read_csv('./data/test.csv') df.describe() dm = df.as_matrix() y = dm[:, 0] x = dm[:, 1:] max = np.max(dm[:, 0]) + 1 onehot_y = np.eye(max)[dm[:, 0]] dataset = tf.data.Dataset.from_tensor_slices((x, onehot_y)) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() with tf.Session() as sess: for e in range(3): sess.run(iterator.initializer) try: while True: X_out, y_out = sess.run([X, y]) print('X_out', X_out) print('y_out', y_out) except tf.errors.OutOfRangeError: print('OutOfRangeError') pass Tag tensorflow dataset iterator","title":"tenserflow data"},{"location":"ml/tensorflow_dataset/#tenserflow-data","text":"","title":"tenserflow data"},{"location":"ml/tensorflow_dataset/#goal","text":"Provide data abstraction. tf.Data.Dataset Represent sequence of elements. Creating from source.(tf.Tensor) Creating from tf.dataset using Transformation. tf.data.Iterator Provide main way to extract data from Dataset","title":"Goal"},{"location":"ml/tensorflow_dataset/#sample-data","text":"l,d0,d1,d2,d3,d4 0,1,2,3,4 1,11,12,13,14 2,21,22,23,24 import pandas as pd import tensorflow as tf import numpy as np df = pd.read_csv('./data/test.csv') df.describe() dm = df.as_matrix() y = dm[:, 0] x = dm[:, 1:] max = np.max(dm[:, 0]) + 1 onehot_y = np.eye(max)[dm[:, 0]] dataset = tf.data.Dataset.from_tensor_slices((x, onehot_y)) iterator = dataset.make_initializable_iterator() X, y = iterator.get_next() with tf.Session() as sess: for e in range(3): sess.run(iterator.initializer) try: while True: X_out, y_out = sess.run([X, y]) print('X_out', X_out) print('y_out', y_out) except tf.errors.OutOfRangeError: print('OutOfRangeError') pass","title":"Sample data"},{"location":"ml/tensorflow_dataset/#tag","text":"tensorflow dataset iterator","title":"Tag"}]}