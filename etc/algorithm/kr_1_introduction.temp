# 들어가기 전에

# 1. 알고리즘의 역할
#### 알고리즘은 무엇인가?
- 함수적 관점
    - 알고리즘은 특정 값을 인풋으로 받아 특정 값을 아웃풋으로 돌려주는 함수라고 생각 할 수 있다.
    - 알고리즘은 해당 함수를 행하는데  필요한 명령어들의 리스트라고 할 수 있다.
- 관계적 관점
    - 인풋 값과 아웃풋 값의 관계가 정의된 문제로 보는 방법도 있다.
    - 알고리즘은 인풋 값과 아웃풋 값의 관계를 만족시키게 하는 일련의 절차라고 할 수 있다.
        - Ex. 정렬 문제
        - **Input**: n 개의 요소로 구성된 순서열 $  A = < a_{1}, a_{2}, ... ,a_{n} > $.
        - **Output**:  $ a_{1}^{\prime} \le a_{2}^{\prime} \le ... \le a_{n}^{\prime} $ 을 만족하는, 재 정렬된 순서열 $ A = < a_{1}^{\prime},a_{2}^{\prime},...,a_{n}^{\prime} >  $ .

#### 알고리즘을 학습해야 하는  이유.
- 문제를 푸는 방법 자체에 대한 설계 패턴, 성능 측정 요소 등을 학습할 수 있다.
- 문제를 푸는 좋은 방법을 배우기 위해서 학습한다.
